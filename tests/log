debug_mgr_getFactory() 0x25b3340
/project/fun/zuspec/zuspec-py/packages/zuspec-be-py/src/zsp_be_py/impl/runner_backend_async_io.py:28: DeprecationWarning: There is no current event loop
  self.loop = asyncio.get_event_loop()
zsp::parser::AstBuilderInt: -- push_scope
zsp::parser::AstBuilderInt: mkId: addr_reg_pkg
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitImport_stmt
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: executor_pkg
zsp::parser::AstBuilderInt: elem "executor_pkg"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::visitImport_stmt
--> zsp::parser::AstBuilderInt::visitComponent_declaration
zsp::parser::AstBuilderInt: mkId: addr_space_base_c
zsp::parser::AstBuilderInt: -- push_scope
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitComponent_declaration
--> zsp::parser::AstBuilderInt::visitStruct_declaration
zsp::parser::AstBuilderInt: mkId: addr_trait_s
zsp::parser::AstBuilderInt: -- push_scope
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitStruct_declaration
--> zsp::parser::AstBuilderInt::visitStruct_declaration
zsp::parser::AstBuilderInt: mkId: empty_addr_trait_s
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_trait_s
zsp::parser::AstBuilderInt: elem "addr_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: -- push_scope
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitStruct_declaration
--> zsp::parser::AstBuilderInt::visitStruct_declaration
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: -- push_scope
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitStruct_declaration
--> zsp::parser::AstBuilderInt::visitComponent_declaration
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_space_base_c
zsp::parser::AstBuilderInt: elem "addr_space_base_c"
<-- zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: contiguous_addr_space_c
--> zsp::parser::AstBuilderInt::mkTypeParamDecl
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: empty_addr_trait_s
zsp::parser::AstBuilderInt: elem "empty_addr_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_trait_s
zsp::parser::AstBuilderInt: elem "addr_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: TRAIT
<-- zsp::parser::AstBuilderInt::mkTypeParamDecl
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: add_region
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: TRAIT
zsp::parser::AstBuilderInt: elem "TRAIT"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: addr_region_s
zsp::parser::AstBuilderInt: elem "addr_region_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: r
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: add_nonallocatable_region
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_region_s
zsp::parser::AstBuilderInt: elem "addr_region_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: r
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitData_declaration
zsp::parser::AstBuilderInt: Name: byte_addressable
--> zsp::parser::AstBuilderInt::visitBool_type
<-- zsp::parser::AstBuilderInt::visitBool_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitBool_literal
<-- zsp::parser::AstBuilderInt::visitBool_literal
<-- zsp::parser::AstBuilderInt::visitExpression
zsp::parser::AstBuilderInt: mkId: byte_addressable
<-- zsp::parser::AstBuilderInt::visitData_declaration
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitComponent_declaration
--> zsp::parser::AstBuilderInt::visitComponent_declaration
--> zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: TRAIT
zsp::parser::AstBuilderInt: elem "TRAIT"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: contiguous_addr_space_c
zsp::parser::AstBuilderInt: elem "contiguous_addr_space_c"
<-- zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: transparent_addr_space_c
--> zsp::parser::AstBuilderInt::mkTypeParamDecl
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: empty_addr_trait_s
zsp::parser::AstBuilderInt: elem "empty_addr_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_trait_s
zsp::parser::AstBuilderInt: elem "addr_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: TRAIT
<-- zsp::parser::AstBuilderInt::mkTypeParamDecl
zsp::parser::AstBuilderInt: -- push_scope
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitComponent_declaration
--> zsp::parser::AstBuilderInt::visitStruct_declaration
zsp::parser::AstBuilderInt: mkId: addr_region_base_s
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitAttr_field
--> zsp::parser::AstBuilderInt::visitData_declaration
zsp::parser::AstBuilderInt: Name: size
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: size
<-- zsp::parser::AstBuilderInt::visitData_declaration
<-- zsp::parser::AstBuilderInt::visitAttr_field
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitStruct_declaration
--> zsp::parser::AstBuilderInt::visitStruct_declaration
zsp::parser::AstBuilderInt: mkId: addr_region_s
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_region_base_s
zsp::parser::AstBuilderInt: elem "addr_region_base_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::mkTypeParamDecl
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: empty_addr_trait_s
zsp::parser::AstBuilderInt: elem "empty_addr_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_trait_s
zsp::parser::AstBuilderInt: elem "addr_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: TRAIT
<-- zsp::parser::AstBuilderInt::mkTypeParamDecl
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitAttr_field
--> zsp::parser::AstBuilderInt::visitData_declaration
zsp::parser::AstBuilderInt: Name: trait
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: TRAIT
zsp::parser::AstBuilderInt: elem "TRAIT"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: trait
<-- zsp::parser::AstBuilderInt::visitData_declaration
<-- zsp::parser::AstBuilderInt::visitAttr_field
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitStruct_declaration
--> zsp::parser::AstBuilderInt::visitStruct_declaration
zsp::parser::AstBuilderInt: mkId: transparent_addr_region_s
--> zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: TRAIT
zsp::parser::AstBuilderInt: elem "TRAIT"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: addr_region_s
zsp::parser::AstBuilderInt: elem "addr_region_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::mkTypeParamDecl
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: empty_addr_trait_s
zsp::parser::AstBuilderInt: elem "empty_addr_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_trait_s
zsp::parser::AstBuilderInt: elem "addr_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: TRAIT
<-- zsp::parser::AstBuilderInt::mkTypeParamDecl
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitAttr_field
--> zsp::parser::AstBuilderInt::visitData_declaration
zsp::parser::AstBuilderInt: Name: addr
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: addr
<-- zsp::parser::AstBuilderInt::visitData_declaration
<-- zsp::parser::AstBuilderInt::visitAttr_field
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitStruct_declaration
--> zsp::parser::AstBuilderInt::visitStruct_declaration
zsp::parser::AstBuilderInt: mkId: addr_claim_base_s
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitAttr_field
--> zsp::parser::AstBuilderInt::visitData_declaration
zsp::parser::AstBuilderInt: Name: size
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: size
<-- zsp::parser::AstBuilderInt::visitData_declaration
<-- zsp::parser::AstBuilderInt::visitAttr_field
--> zsp::parser::AstBuilderInt::visitAttr_field
--> zsp::parser::AstBuilderInt::visitData_declaration
zsp::parser::AstBuilderInt: Name: permanent
--> zsp::parser::AstBuilderInt::visitBool_type
<-- zsp::parser::AstBuilderInt::visitBool_type
zsp::parser::AstBuilderInt: mkId: permanent
<-- zsp::parser::AstBuilderInt::visitData_declaration
<-- zsp::parser::AstBuilderInt::visitAttr_field
--> zsp::parser::AstBuilderInt::visitConstraint_declaration
--> zsp::parser::AstBuilderInt::visitDefault_constraint
zsp::parser::AstBuilderInt: TODO
<-- zsp::parser::AstBuilderInt::visitDefault_constraint
<-- zsp::parser::AstBuilderInt::visitConstraint_declaration
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitStruct_declaration
--> zsp::parser::AstBuilderInt::visitStruct_declaration
zsp::parser::AstBuilderInt: mkId: addr_claim_s
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_claim_base_s
zsp::parser::AstBuilderInt: elem "addr_claim_base_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::mkTypeParamDecl
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: empty_addr_trait_s
zsp::parser::AstBuilderInt: elem "empty_addr_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_trait_s
zsp::parser::AstBuilderInt: elem "addr_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: TRAIT
<-- zsp::parser::AstBuilderInt::mkTypeParamDecl
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitAttr_field
--> zsp::parser::AstBuilderInt::visitData_declaration
zsp::parser::AstBuilderInt: Name: trait
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: TRAIT
zsp::parser::AstBuilderInt: elem "TRAIT"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: trait
<-- zsp::parser::AstBuilderInt::visitData_declaration
<-- zsp::parser::AstBuilderInt::visitAttr_field
--> zsp::parser::AstBuilderInt::visitAttr_field
--> zsp::parser::AstBuilderInt::visitData_declaration
zsp::parser::AstBuilderInt: Name: alignment
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::mkDomainOpenRangeList
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 0
zsp::parser::AstBuilderInt: Unbased oct number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 1
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 2
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 3
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 4
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 5
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 6
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 7
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 8
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 9
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 10
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 11
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 12
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 13
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 14
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 15
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 16
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 17
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 18
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 19
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 20
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 21
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 22
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 23
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 24
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 25
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 26
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 27
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 28
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 29
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 30
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 31
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 32
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 33
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 34
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 35
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 36
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 37
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 38
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 39
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 40
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 41
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 42
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 43
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 44
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 45
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 46
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 47
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 48
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 49
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 50
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 51
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 52
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 53
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 54
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 55
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 56
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 57
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 58
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 59
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 60
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 61
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 62
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64'd2
zsp::parser::AstBuilderInt: Based dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 63
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::mkDomainOpenRangeList
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: alignment
<-- zsp::parser::AstBuilderInt::visitData_declaration
<-- zsp::parser::AstBuilderInt::visitAttr_field
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitStruct_declaration
--> zsp::parser::AstBuilderInt::visitStruct_declaration
zsp::parser::AstBuilderInt: mkId: transparent_addr_claim_s
--> zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: TRAIT
zsp::parser::AstBuilderInt: elem "TRAIT"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: addr_claim_s
zsp::parser::AstBuilderInt: elem "addr_claim_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::mkTypeParamDecl
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: empty_addr_trait_s
zsp::parser::AstBuilderInt: elem "empty_addr_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_trait_s
zsp::parser::AstBuilderInt: elem "addr_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: TRAIT
<-- zsp::parser::AstBuilderInt::mkTypeParamDecl
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitAttr_field
--> zsp::parser::AstBuilderInt::visitData_declaration
zsp::parser::AstBuilderInt: Name: addr
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: addr
<-- zsp::parser::AstBuilderInt::visitData_declaration
<-- zsp::parser::AstBuilderInt::visitAttr_field
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitStruct_declaration
--> zsp::parser::AstBuilderInt::visitEnum_declaration
zsp::parser::AstBuilderInt: mkId: endianness_e
zsp::parser::AstBuilderInt: mkId: LITTLE_ENDIAN
zsp::parser::AstBuilderInt: mkId: BIG_ENDIAN
<-- zsp::parser::AstBuilderInt::visitEnum_declaration
--> zsp::parser::AstBuilderInt::visitStruct_declaration
zsp::parser::AstBuilderInt: mkId: packed_s
--> zsp::parser::AstBuilderInt::mkTypeParamDecl
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitRef_path
--> zsp::parser::AstBuilderInt::mkExprRefPath
zsp::parser::AstBuilderInt: !static_ref_path: ExprRefPathContext
--> zsp::parser::AstBuilderInt::mkHierarchicalId
zsp::parser::AstBuilderInt: mkId: LITTLE_ENDIAN
<-- zsp::parser::AstBuilderInt::mkHierarchicalId
<-- zsp::parser::AstBuilderInt::mkExprRefPath
<-- zsp::parser::AstBuilderInt::visitRef_path
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: endianness_e
zsp::parser::AstBuilderInt: elem "endianness_e"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: e
<-- zsp::parser::AstBuilderInt::mkTypeParamDecl
zsp::parser::AstBuilderInt: -- push_scope
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitStruct_declaration
--> zsp::parser::AstBuilderInt::visitStruct_declaration
zsp::parser::AstBuilderInt: mkId: sizeof_s
--> zsp::parser::AstBuilderInt::mkTypeParamDecl
zsp::parser::AstBuilderInt: mkId: T
<-- zsp::parser::AstBuilderInt::mkTypeParamDecl
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitAttr_field
--> zsp::parser::AstBuilderInt::visitData_declaration
zsp::parser::AstBuilderInt: Name: nbytes
--> zsp::parser::AstBuilderInt::visitInteger_type
<-- zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 1
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
zsp::parser::AstBuilderInt: mkId: nbytes
<-- zsp::parser::AstBuilderInt::visitData_declaration
<-- zsp::parser::AstBuilderInt::visitAttr_field
--> zsp::parser::AstBuilderInt::visitAttr_field
--> zsp::parser::AstBuilderInt::visitData_declaration
zsp::parser::AstBuilderInt: Name: nbits
--> zsp::parser::AstBuilderInt::visitInteger_type
<-- zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 1
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
zsp::parser::AstBuilderInt: mkId: nbits
<-- zsp::parser::AstBuilderInt::visitData_declaration
<-- zsp::parser::AstBuilderInt::visitAttr_field
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitStruct_declaration
--> zsp::parser::AstBuilderInt::visitConst_field_declaration
--> zsp::parser::AstBuilderInt::visitData_declaration
zsp::parser::AstBuilderInt: Name: nullhandle
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNull_ref
<-- zsp::parser::AstBuilderInt::visitNull_ref
<-- zsp::parser::AstBuilderInt::visitExpression
zsp::parser::AstBuilderInt: mkId: nullhandle
<-- zsp::parser::AstBuilderInt::visitData_declaration
<-- zsp::parser::AstBuilderInt::visitConst_field_declaration
--> zsp::parser::AstBuilderInt::visitStruct_declaration
zsp::parser::AstBuilderInt: mkId: sized_addr_handle_s
--> zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: e
zsp::parser::AstBuilderInt: elem "e"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: packed_s
zsp::parser::AstBuilderInt: elem "packed_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::mkTypeParamDecl
--> zsp::parser::AstBuilderInt::visitInteger_type
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: SZ
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 0
zsp::parser::AstBuilderInt: Unbased oct number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitInteger_type
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: lsb
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitRef_path
--> zsp::parser::AstBuilderInt::mkExprRefPath
zsp::parser::AstBuilderInt: !static_ref_path: ExprRefPathContext
--> zsp::parser::AstBuilderInt::mkHierarchicalId
zsp::parser::AstBuilderInt: mkId: LITTLE_ENDIAN
<-- zsp::parser::AstBuilderInt::mkHierarchicalId
<-- zsp::parser::AstBuilderInt::mkExprRefPath
<-- zsp::parser::AstBuilderInt::visitRef_path
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: endianness_e
zsp::parser::AstBuilderInt: elem "endianness_e"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: e
<-- zsp::parser::AstBuilderInt::mkTypeParamDecl
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitAttr_field
--> zsp::parser::AstBuilderInt::visitData_declaration
zsp::parser::AstBuilderInt: Name: hndl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: hndl
<-- zsp::parser::AstBuilderInt::visitData_declaration
<-- zsp::parser::AstBuilderInt::visitAttr_field
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitStruct_declaration
--> zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: make_handle_from_claim
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_claim_base_s
zsp::parser::AstBuilderInt: elem "addr_claim_base_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: claim
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 0
zsp::parser::AstBuilderInt: Unbased oct number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
zsp::parser::AstBuilderInt: mkId: offset
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: make_handle_from_handle
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: handle
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: offset
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: addr_value
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: hndl
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitImport_function
<-- zsp::parser::AstBuilderInt::visitImport_function
--> zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 8
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: read8
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: hndl
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 16
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: read16
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: hndl
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 32
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: read32
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: hndl
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: read64
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: hndl
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitFunction_decl
zsp::parser::AstBuilderInt: mkId: write8
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: hndl
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 8
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: data
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitFunction_decl
zsp::parser::AstBuilderInt: mkId: write16
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: hndl
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 16
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: data
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitFunction_decl
zsp::parser::AstBuilderInt: mkId: write32
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: hndl
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 32
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: data
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitFunction_decl
zsp::parser::AstBuilderInt: mkId: write64
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: hndl
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: data
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitExtend_stmt
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: executor_base_c
zsp::parser::AstBuilderInt: elem "executor_base_c"
<-- zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: -- push_scope
zsp::parser::AstBuilderInt: Extend Component: 8 items
--> zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 8
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: read8
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: hndl
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 16
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: read16
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: hndl
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 32
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: read32
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: hndl
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: read64
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: hndl
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitFunction_decl
zsp::parser::AstBuilderInt: mkId: write8
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: hndl
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 8
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: data
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitFunction_decl
zsp::parser::AstBuilderInt: mkId: write16
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: hndl
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 16
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: data
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitFunction_decl
zsp::parser::AstBuilderInt: mkId: write32
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: hndl
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 32
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: data
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitFunction_decl
zsp::parser::AstBuilderInt: mkId: write64
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: hndl
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: data
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitExtend_stmt
--> zsp::parser::AstBuilderInt::visitEnum_declaration
zsp::parser::AstBuilderInt: mkId: reg_access
zsp::parser::AstBuilderInt: mkId: READWRITE
zsp::parser::AstBuilderInt: mkId: READONLY
zsp::parser::AstBuilderInt: mkId: WRITEONLY
<-- zsp::parser::AstBuilderInt::visitEnum_declaration
--> zsp::parser::AstBuilderInt::visitComponent_declaration
zsp::parser::AstBuilderInt: mkId: reg_c
--> zsp::parser::AstBuilderInt::mkTypeParamDecl
zsp::parser::AstBuilderInt: mkId: R
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitRef_path
--> zsp::parser::AstBuilderInt::mkExprRefPath
zsp::parser::AstBuilderInt: !static_ref_path: ExprRefPathContext
--> zsp::parser::AstBuilderInt::mkHierarchicalId
zsp::parser::AstBuilderInt: mkId: READWRITE
<-- zsp::parser::AstBuilderInt::mkHierarchicalId
<-- zsp::parser::AstBuilderInt::mkExprRefPath
<-- zsp::parser::AstBuilderInt::visitRef_path
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: reg_access
zsp::parser::AstBuilderInt: elem "reg_access"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: ACC
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 8
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitRef_path
--> zsp::parser::AstBuilderInt::mkExprRefPath
zsp::parser::AstBuilderInt: static_ref_path: 
zsp::parser::AstBuilderInt: !hierarchical_id: 
zsp::parser::AstBuilderInt: case1
zsp::parser::AstBuilderInt: Non-function static reference
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: R
zsp::parser::AstBuilderInt: elem "R"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: sizeof_s
zsp::parser::AstBuilderInt: mkId: nbytes
<-- zsp::parser::AstBuilderInt::mkExprRefPath
<-- zsp::parser::AstBuilderInt::visitRef_path
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitInteger_type
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: SZ2
<-- zsp::parser::AstBuilderInt::mkTypeParamDecl
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: R
zsp::parser::AstBuilderInt: elem "R"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: read
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitImport_function
<-- zsp::parser::AstBuilderInt::visitImport_function
--> zsp::parser::AstBuilderInt::visitFunction_decl
zsp::parser::AstBuilderInt: mkId: write
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: R
zsp::parser::AstBuilderInt: elem "R"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: r
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitImport_function
<-- zsp::parser::AstBuilderInt::visitImport_function
--> zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitRef_path
--> zsp::parser::AstBuilderInt::mkExprRefPath
zsp::parser::AstBuilderInt: !static_ref_path: ExprRefPathContext
--> zsp::parser::AstBuilderInt::mkHierarchicalId
zsp::parser::AstBuilderInt: mkId: SZ2
<-- zsp::parser::AstBuilderInt::mkHierarchicalId
<-- zsp::parser::AstBuilderInt::mkExprRefPath
<-- zsp::parser::AstBuilderInt::visitRef_path
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: read_val
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitImport_function
<-- zsp::parser::AstBuilderInt::visitImport_function
--> zsp::parser::AstBuilderInt::visitFunction_decl
zsp::parser::AstBuilderInt: mkId: write_val
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitRef_path
--> zsp::parser::AstBuilderInt::mkExprRefPath
zsp::parser::AstBuilderInt: !static_ref_path: ExprRefPathContext
--> zsp::parser::AstBuilderInt::mkHierarchicalId
zsp::parser::AstBuilderInt: mkId: SZ2
<-- zsp::parser::AstBuilderInt::mkHierarchicalId
<-- zsp::parser::AstBuilderInt::mkExprRefPath
<-- zsp::parser::AstBuilderInt::visitRef_path
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: r
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitImport_function
<-- zsp::parser::AstBuilderInt::visitImport_function
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitComponent_declaration
--> zsp::parser::AstBuilderInt::visitComponent_declaration
zsp::parser::AstBuilderInt: mkId: reg_group_c
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: get_offset_of_instance
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitString_type
<-- zsp::parser::AstBuilderInt::visitString_type
zsp::parser::AstBuilderInt: mkId: name
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 64
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: get_offset_of_instance_array
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitString_type
<-- zsp::parser::AstBuilderInt::visitString_type
zsp::parser::AstBuilderInt: mkId: name
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitInteger_type
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: index
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitFunction_decl
zsp::parser::AstBuilderInt: mkId: set_handle
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_handle_t
zsp::parser::AstBuilderInt: elem "addr_handle_t"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: addr
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitImport_function
<-- zsp::parser::AstBuilderInt::visitImport_function
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitComponent_declaration
zsp::parser::AstBuilderInt: -- pop_scope
zsp::parser::AstBuilderInt: -- pop_scope
zsp::parser::AstBuilderInt: -- push_scope
zsp::parser::AstBuilderInt: mkId: executor_pkg
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitImport_stmt
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: addr_reg_pkg
zsp::parser::AstBuilderInt: elem "addr_reg_pkg"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::visitImport_stmt
--> zsp::parser::AstBuilderInt::visitStruct_declaration
zsp::parser::AstBuilderInt: mkId: executor_trait_s
zsp::parser::AstBuilderInt: -- push_scope
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitStruct_declaration
--> zsp::parser::AstBuilderInt::visitStruct_declaration
zsp::parser::AstBuilderInt: mkId: empty_executor_trait_s
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: executor_trait_s
zsp::parser::AstBuilderInt: elem "executor_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: -- push_scope
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitStruct_declaration
--> zsp::parser::AstBuilderInt::visitComponent_declaration
zsp::parser::AstBuilderInt: mkId: executor_base_c
zsp::parser::AstBuilderInt: -- push_scope
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitComponent_declaration
--> zsp::parser::AstBuilderInt::visitComponent_declaration
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: executor_base_c
zsp::parser::AstBuilderInt: elem "executor_base_c"
<-- zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: executor_c
--> zsp::parser::AstBuilderInt::mkTypeParamDecl
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: empty_executor_trait_s
zsp::parser::AstBuilderInt: elem "empty_executor_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: executor_trait_s
zsp::parser::AstBuilderInt: elem "executor_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: TRAIT
<-- zsp::parser::AstBuilderInt::mkTypeParamDecl
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitData_declaration
zsp::parser::AstBuilderInt: Name: trait
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: TRAIT
zsp::parser::AstBuilderInt: elem "TRAIT"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: trait
<-- zsp::parser::AstBuilderInt::visitData_declaration
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitComponent_declaration
--> zsp::parser::AstBuilderInt::visitComponent_declaration
zsp::parser::AstBuilderInt: mkId: executor_group_c
--> zsp::parser::AstBuilderInt::mkTypeParamDecl
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: empty_executor_trait_s
zsp::parser::AstBuilderInt: elem "empty_executor_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: executor_trait_s
zsp::parser::AstBuilderInt: elem "executor_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: TRAIT
<-- zsp::parser::AstBuilderInt::mkTypeParamDecl
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitFunction_decl
zsp::parser::AstBuilderInt: mkId: add_executor
--> zsp::parser::AstBuilderInt::mkFunctionParamDecl
--> zsp::parser::AstBuilderInt::visitReference_type
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: TRAIT
zsp::parser::AstBuilderInt: elem "TRAIT"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: executor_c
zsp::parser::AstBuilderInt: elem "executor_c"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
<-- zsp::parser::AstBuilderInt::visitReference_type
zsp::parser::AstBuilderInt: mkId: exe
<-- zsp::parser::AstBuilderInt::mkFunctionParamDecl
<-- zsp::parser::AstBuilderInt::visitFunction_decl
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitComponent_declaration
--> zsp::parser::AstBuilderInt::visitStruct_declaration
zsp::parser::AstBuilderInt: mkId: executor_claim_s
--> zsp::parser::AstBuilderInt::mkTypeParamDecl
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: empty_executor_trait_s
zsp::parser::AstBuilderInt: elem "empty_executor_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: executor_trait_s
zsp::parser::AstBuilderInt: elem "executor_trait_s"
<-- zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: TRAIT
<-- zsp::parser::AstBuilderInt::mkTypeParamDecl
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitAttr_field
--> zsp::parser::AstBuilderInt::visitData_declaration
zsp::parser::AstBuilderInt: Name: trait
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: TRAIT
zsp::parser::AstBuilderInt: elem "TRAIT"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
zsp::parser::AstBuilderInt: mkId: trait
<-- zsp::parser::AstBuilderInt::visitData_declaration
<-- zsp::parser::AstBuilderInt::visitAttr_field
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitStruct_declaration
--> zsp::parser::AstBuilderInt::visitFunction_decl
--> zsp::parser::AstBuilderInt::visitReference_type
--> zsp::parser::AstBuilderInt::visitType_identifier
--> zsp::parser::AstBuilderInt::mkDataTypeUserDefined
--> zsp::parser::AstBuilderInt::mkTypeId
zsp::parser::AstBuilderInt: mkId: executor_base_c
zsp::parser::AstBuilderInt: elem "executor_base_c"
<-- zsp::parser::AstBuilderInt::mkTypeId
<-- zsp::parser::AstBuilderInt::mkDataTypeUserDefined
<-- zsp::parser::AstBuilderInt::visitType_identifier
<-- zsp::parser::AstBuilderInt::visitReference_type
zsp::parser::AstBuilderInt: mkId: executor
<-- zsp::parser::AstBuilderInt::visitFunction_decl
zsp::parser::AstBuilderInt: -- pop_scope
zsp::parser::AstBuilderInt: -- pop_scope
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitStruct_declaration
zsp::parser::AstBuilderInt: mkId: packed
--> zsp::parser::AstBuilderInt::mkTypeParamDecl
zsp::parser::AstBuilderInt: mkId: T
<-- zsp::parser::AstBuilderInt::mkTypeParamDecl
zsp::parser::AstBuilderInt: -- push_scope
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitStruct_declaration
zsp::parser::AstBuilderInt: -- pop_scope
zsp::parser::AstBuilderInt: -- push_scope
zsp::parser::AstBuilderInt: mkId: std_pkg
zsp::parser::AstBuilderInt: -- push_scope
zsp::parser::AstBuilderInt: -- pop_scope
zsp::parser::AstBuilderInt: -- pop_scope
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitPyimport_single_module
zsp::parser::AstBuilderInt: mkId: local
<-- zsp::parser::AstBuilderInt::visitPyimport_single_module
--> zsp::parser::AstBuilderInt::visitComponent_declaration
zsp::parser::AstBuilderInt: mkId: pss_top
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitAction_declaration
zsp::parser::AstBuilderInt: mkId: Entry
zsp::parser::AstBuilderInt: -- push_scope
--> zsp::parser::AstBuilderInt::visitAttr_field
--> zsp::parser::AstBuilderInt::visitData_declaration
zsp::parser::AstBuilderInt: Name: i
--> zsp::parser::AstBuilderInt::visitInteger_type
<-- zsp::parser::AstBuilderInt::visitInteger_type
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 2
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
zsp::parser::AstBuilderInt: mkId: i
zsp::parser::AstBuilderInt: Name: j
--> zsp::parser::AstBuilderInt::visitInteger_type
<-- zsp::parser::AstBuilderInt::visitInteger_type
zsp::parser::AstBuilderInt: mkId: j
<-- zsp::parser::AstBuilderInt::visitData_declaration
<-- zsp::parser::AstBuilderInt::visitAttr_field
--> zsp::parser::AstBuilderInt::visitExec_block
--> zsp::parser::AstBuilderInt::visitProcedural_assignment_stmt
--> zsp::parser::AstBuilderInt::mkExprRefPath
zsp::parser::AstBuilderInt: !static_ref_path: ExprRefPathContext
--> zsp::parser::AstBuilderInt::mkHierarchicalId
zsp::parser::AstBuilderInt: mkId: i
<-- zsp::parser::AstBuilderInt::mkHierarchicalId
<-- zsp::parser::AstBuilderInt::mkExprRefPath
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitNumber 2
zsp::parser::AstBuilderInt: Unbased dec number
<-- zsp::parser::AstBuilderInt::visitNumber
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitProcedural_assignment_stmt
--> zsp::parser::AstBuilderInt::visitProcedural_assignment_stmt
--> zsp::parser::AstBuilderInt::mkExprRefPath
zsp::parser::AstBuilderInt: !static_ref_path: ExprRefPathContext
--> zsp::parser::AstBuilderInt::mkHierarchicalId
zsp::parser::AstBuilderInt: mkId: j
<-- zsp::parser::AstBuilderInt::mkHierarchicalId
<-- zsp::parser::AstBuilderInt::mkExprRefPath
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitRef_path
--> zsp::parser::AstBuilderInt::mkExprRefPath
zsp::parser::AstBuilderInt: static_ref_path: 
zsp::parser::AstBuilderInt: !hierarchical_id: 
zsp::parser::AstBuilderInt: case2 (multi-element path) size=0
zsp::parser::AstBuilderInt: Add root elem
zsp::parser::AstBuilderInt: mkId: local
--> zsp::parser::AstBuilderInt::mkHierarchicalId(member_path_elem)
zsp::parser::AstBuilderInt: mkId: doit
--> zsp::parser::AstBuilderInt::visitExpression
--> zsp::parser::AstBuilderInt::visitRef_path
--> zsp::parser::AstBuilderInt::mkExprRefPath
zsp::parser::AstBuilderInt: !static_ref_path: ExprRefPathContext
--> zsp::parser::AstBuilderInt::mkHierarchicalId
zsp::parser::AstBuilderInt: mkId: i
<-- zsp::parser::AstBuilderInt::mkHierarchicalId
<-- zsp::parser::AstBuilderInt::mkExprRefPath
<-- zsp::parser::AstBuilderInt::visitRef_path
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::mkHierarchicalId(member_path_elem)
<-- zsp::parser::AstBuilderInt::mkExprRefPath
<-- zsp::parser::AstBuilderInt::visitRef_path
<-- zsp::parser::AstBuilderInt::visitExpression
<-- zsp::parser::AstBuilderInt::visitProcedural_assignment_stmt
<-- zsp::parser::AstBuilderInt::visitExec_block
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitAction_declaration
zsp::parser::AstBuilderInt: -- pop_scope
<-- zsp::parser::AstBuilderInt::visitComponent_declaration
zsp::parser::AstBuilderInt: -- pop_scope
--> TaskBuildSymbolTree::build
--> TaskBuildSymbolTree::visitBuiltins
--> TaskBuildSymbolTree::visitTypeScope pyobj
TaskBuildSymbolTree: No plist
<-- TaskBuildSymbolTree::visitTypeScope pyobj
<-- TaskBuildSymbolTree::visitBuiltins
--> TaskBuildSymbolTree::visitPackageScope
TaskBuildSymbolTree:   process name-elem addr_reg_pkg
Add package addr_reg_pkg with id 1
--> TaskBuildSymbolTree::visitPackageImportStmt
TaskBuildSymbolTree: Create new ImportSpec
TaskBuildSymbolTree: Add import to scope addr_reg_pkg
<-- TaskBuildSymbolTree::visitPackageImportStmt
--> TaskBuildSymbolTree::visitTypeScope addr_space_base_c
TaskBuildSymbolTree: No plist
<-- TaskBuildSymbolTree::visitTypeScope addr_space_base_c
--> TaskBuildSymbolTree::visitTypeScope addr_trait_s
TaskBuildSymbolTree: No plist
<-- TaskBuildSymbolTree::visitTypeScope addr_trait_s
--> TaskBuildSymbolTree::visitTypeScope empty_addr_trait_s
TaskBuildSymbolTree: No plist
<-- TaskBuildSymbolTree::visitTypeScope empty_addr_trait_s
--> TaskBuildSymbolTree::visitTypeScope addr_handle_t
TaskBuildSymbolTree: No plist
<-- TaskBuildSymbolTree::visitTypeScope addr_handle_t
--> TaskBuildSymbolTree::visitTypeScope contiguous_addr_space_c
TaskBuildSymbolTree: Build out plist 1
TaskBuildSymbolTree:   Param: 
--> TaskBuildSymbolTree::visitFunctionPrototype add_region
<-- TaskBuildSymbolTree::visitFunctionPrototype add_region
--> TaskBuildSymbolTree::visitFunctionPrototype add_nonallocatable_region
<-- TaskBuildSymbolTree::visitFunctionPrototype add_nonallocatable_region
--> TaskBuildSymbolTree::visitField byte_addressable
TaskBuildSymbolTree: Add field to scope contiguous_addr_space_c
<-- TaskBuildSymbolTree::visitField byte_addressable
<-- TaskBuildSymbolTree::visitTypeScope contiguous_addr_space_c
--> TaskBuildSymbolTree::visitTypeScope transparent_addr_space_c
TaskBuildSymbolTree: Build out plist 1
TaskBuildSymbolTree:   Param: 
<-- TaskBuildSymbolTree::visitTypeScope transparent_addr_space_c
--> TaskBuildSymbolTree::visitTypeScope addr_region_base_s
TaskBuildSymbolTree: No plist
--> TaskBuildSymbolTree::visitField size
TaskBuildSymbolTree: Add field to scope addr_region_base_s
<-- TaskBuildSymbolTree::visitField size
<-- TaskBuildSymbolTree::visitTypeScope addr_region_base_s
--> TaskBuildSymbolTree::visitTypeScope addr_region_s
TaskBuildSymbolTree: Build out plist 1
TaskBuildSymbolTree:   Param: 
--> TaskBuildSymbolTree::visitField trait
TaskBuildSymbolTree: Add field to scope addr_region_s
<-- TaskBuildSymbolTree::visitField trait
<-- TaskBuildSymbolTree::visitTypeScope addr_region_s
--> TaskBuildSymbolTree::visitTypeScope transparent_addr_region_s
TaskBuildSymbolTree: Build out plist 1
TaskBuildSymbolTree:   Param: 
--> TaskBuildSymbolTree::visitField addr
TaskBuildSymbolTree: Add field to scope transparent_addr_region_s
<-- TaskBuildSymbolTree::visitField addr
<-- TaskBuildSymbolTree::visitTypeScope transparent_addr_region_s
--> TaskBuildSymbolTree::visitTypeScope addr_claim_base_s
TaskBuildSymbolTree: No plist
--> TaskBuildSymbolTree::visitField size
TaskBuildSymbolTree: Add field to scope addr_claim_base_s
<-- TaskBuildSymbolTree::visitField size
--> TaskBuildSymbolTree::visitField permanent
TaskBuildSymbolTree: Add field to scope addr_claim_base_s
<-- TaskBuildSymbolTree::visitField permanent
--> TaskBuildSymbolTree::visitConstraintBlock
<-- TaskBuildSymbolTree::visitConstraintBlock
<-- TaskBuildSymbolTree::visitTypeScope addr_claim_base_s
--> TaskBuildSymbolTree::visitTypeScope addr_claim_s
TaskBuildSymbolTree: Build out plist 1
TaskBuildSymbolTree:   Param: 
--> TaskBuildSymbolTree::visitField trait
TaskBuildSymbolTree: Add field to scope addr_claim_s
<-- TaskBuildSymbolTree::visitField trait
--> TaskBuildSymbolTree::visitField alignment
TaskBuildSymbolTree: Add field to scope addr_claim_s
<-- TaskBuildSymbolTree::visitField alignment
<-- TaskBuildSymbolTree::visitTypeScope addr_claim_s
--> TaskBuildSymbolTree::visitTypeScope transparent_addr_claim_s
TaskBuildSymbolTree: Build out plist 1
TaskBuildSymbolTree:   Param: 
--> TaskBuildSymbolTree::visitField addr
TaskBuildSymbolTree: Add field to scope transparent_addr_claim_s
<-- TaskBuildSymbolTree::visitField addr
<-- TaskBuildSymbolTree::visitTypeScope transparent_addr_claim_s
--> TaskBuildSymbolTree::visitEnumDecl endianness_e
--> TaskBuildSymbolTree::visitEnumItem LITTLE_ENDIAN
<-- TaskBuildSymbolTree::visitEnumItem LITTLE_ENDIAN
--> TaskBuildSymbolTree::visitEnumItem BIG_ENDIAN
<-- TaskBuildSymbolTree::visitEnumItem BIG_ENDIAN
<-- TaskBuildSymbolTree::visitEnumDecl endianness_e
--> TaskBuildSymbolTree::visitTypeScope packed_s
TaskBuildSymbolTree: Build out plist 1
TaskBuildSymbolTree:   Param: 
<-- TaskBuildSymbolTree::visitTypeScope packed_s
--> TaskBuildSymbolTree::visitTypeScope sizeof_s
TaskBuildSymbolTree: Build out plist 1
TaskBuildSymbolTree:   Param: 
--> TaskBuildSymbolTree::visitField nbytes
TaskBuildSymbolTree: Add field to scope sizeof_s
<-- TaskBuildSymbolTree::visitField nbytes
--> TaskBuildSymbolTree::visitField nbits
TaskBuildSymbolTree: Add field to scope sizeof_s
<-- TaskBuildSymbolTree::visitField nbits
<-- TaskBuildSymbolTree::visitTypeScope sizeof_s
--> TaskBuildSymbolTree::visitField nullhandle
TaskBuildSymbolTree: Add field to scope addr_reg_pkg
<-- TaskBuildSymbolTree::visitField nullhandle
--> TaskBuildSymbolTree::visitTypeScope sized_addr_handle_s
TaskBuildSymbolTree: Build out plist 3
TaskBuildSymbolTree:   Param: 
TaskBuildSymbolTree:   Param: 
TaskBuildSymbolTree:   Param: 
--> TaskBuildSymbolTree::visitField hndl
TaskBuildSymbolTree: Add field to scope sized_addr_handle_s
<-- TaskBuildSymbolTree::visitField hndl
<-- TaskBuildSymbolTree::visitTypeScope sized_addr_handle_s
--> TaskBuildSymbolTree::visitFunctionPrototype make_handle_from_claim
<-- TaskBuildSymbolTree::visitFunctionPrototype make_handle_from_claim
--> TaskBuildSymbolTree::visitFunctionPrototype make_handle_from_handle
<-- TaskBuildSymbolTree::visitFunctionPrototype make_handle_from_handle
--> TaskBuildSymbolTree::visitFunctionPrototype addr_value
<-- TaskBuildSymbolTree::visitFunctionPrototype addr_value
--> TaskBuildSymbolTree::visitFunctionPrototype read8
<-- TaskBuildSymbolTree::visitFunctionPrototype read8
--> TaskBuildSymbolTree::visitFunctionPrototype read16
<-- TaskBuildSymbolTree::visitFunctionPrototype read16
--> TaskBuildSymbolTree::visitFunctionPrototype read32
<-- TaskBuildSymbolTree::visitFunctionPrototype read32
--> TaskBuildSymbolTree::visitFunctionPrototype read64
<-- TaskBuildSymbolTree::visitFunctionPrototype read64
--> TaskBuildSymbolTree::visitFunctionPrototype write8
<-- TaskBuildSymbolTree::visitFunctionPrototype write8
--> TaskBuildSymbolTree::visitFunctionPrototype write16
<-- TaskBuildSymbolTree::visitFunctionPrototype write16
--> TaskBuildSymbolTree::visitFunctionPrototype write32
<-- TaskBuildSymbolTree::visitFunctionPrototype write32
--> TaskBuildSymbolTree::visitFunctionPrototype write64
<-- TaskBuildSymbolTree::visitFunctionPrototype write64
--> TaskBuildSymbolTree::visitExtendType
--> TaskBuildSymbolTree::visitFunctionPrototype read8
<-- TaskBuildSymbolTree::visitFunctionPrototype read8
--> TaskBuildSymbolTree::visitFunctionPrototype read16
<-- TaskBuildSymbolTree::visitFunctionPrototype read16
--> TaskBuildSymbolTree::visitFunctionPrototype read32
<-- TaskBuildSymbolTree::visitFunctionPrototype read32
--> TaskBuildSymbolTree::visitFunctionPrototype read64
<-- TaskBuildSymbolTree::visitFunctionPrototype read64
--> TaskBuildSymbolTree::visitFunctionPrototype write8
<-- TaskBuildSymbolTree::visitFunctionPrototype write8
--> TaskBuildSymbolTree::visitFunctionPrototype write16
<-- TaskBuildSymbolTree::visitFunctionPrototype write16
--> TaskBuildSymbolTree::visitFunctionPrototype write32
<-- TaskBuildSymbolTree::visitFunctionPrototype write32
--> TaskBuildSymbolTree::visitFunctionPrototype write64
<-- TaskBuildSymbolTree::visitFunctionPrototype write64
<-- TaskBuildSymbolTree::visitExtendType
--> TaskBuildSymbolTree::visitEnumDecl reg_access
--> TaskBuildSymbolTree::visitEnumItem READWRITE
<-- TaskBuildSymbolTree::visitEnumItem READWRITE
--> TaskBuildSymbolTree::visitEnumItem READONLY
<-- TaskBuildSymbolTree::visitEnumItem READONLY
--> TaskBuildSymbolTree::visitEnumItem WRITEONLY
<-- TaskBuildSymbolTree::visitEnumItem WRITEONLY
<-- TaskBuildSymbolTree::visitEnumDecl reg_access
--> TaskBuildSymbolTree::visitTypeScope reg_c
TaskBuildSymbolTree: Build out plist 3
TaskBuildSymbolTree:   Param: 
TaskBuildSymbolTree:   Param: 
TaskBuildSymbolTree:   Param: 
--> TaskBuildSymbolTree::visitFunctionPrototype read
<-- TaskBuildSymbolTree::visitFunctionPrototype read
--> TaskBuildSymbolTree::visitFunctionPrototype write
<-- TaskBuildSymbolTree::visitFunctionPrototype write
--> TaskBuildSymbolTree::visitFunctionPrototype read_val
<-- TaskBuildSymbolTree::visitFunctionPrototype read_val
--> TaskBuildSymbolTree::visitFunctionPrototype write_val
<-- TaskBuildSymbolTree::visitFunctionPrototype write_val
<-- TaskBuildSymbolTree::visitTypeScope reg_c
--> TaskBuildSymbolTree::visitTypeScope reg_group_c
TaskBuildSymbolTree: No plist
--> TaskBuildSymbolTree::visitFunctionPrototype get_offset_of_instance
<-- TaskBuildSymbolTree::visitFunctionPrototype get_offset_of_instance
--> TaskBuildSymbolTree::visitFunctionPrototype get_offset_of_instance_array
<-- TaskBuildSymbolTree::visitFunctionPrototype get_offset_of_instance_array
--> TaskBuildSymbolTree::visitFunctionPrototype set_handle
<-- TaskBuildSymbolTree::visitFunctionPrototype set_handle
<-- TaskBuildSymbolTree::visitTypeScope reg_group_c
<-- TaskBuildSymbolTree::visitPackageScope
--> TaskBuildSymbolTree::visitPackageScope
TaskBuildSymbolTree:   process name-elem executor_pkg
Add package executor_pkg with id 2
--> TaskBuildSymbolTree::visitPackageImportStmt
TaskBuildSymbolTree: Create new ImportSpec
TaskBuildSymbolTree: Add import to scope executor_pkg
<-- TaskBuildSymbolTree::visitPackageImportStmt
--> TaskBuildSymbolTree::visitTypeScope executor_trait_s
TaskBuildSymbolTree: No plist
<-- TaskBuildSymbolTree::visitTypeScope executor_trait_s
--> TaskBuildSymbolTree::visitTypeScope empty_executor_trait_s
TaskBuildSymbolTree: No plist
<-- TaskBuildSymbolTree::visitTypeScope empty_executor_trait_s
--> TaskBuildSymbolTree::visitTypeScope executor_base_c
TaskBuildSymbolTree: No plist
<-- TaskBuildSymbolTree::visitTypeScope executor_base_c
--> TaskBuildSymbolTree::visitTypeScope executor_c
TaskBuildSymbolTree: Build out plist 1
TaskBuildSymbolTree:   Param: 
--> TaskBuildSymbolTree::visitField trait
TaskBuildSymbolTree: Add field to scope executor_c
<-- TaskBuildSymbolTree::visitField trait
<-- TaskBuildSymbolTree::visitTypeScope executor_c
--> TaskBuildSymbolTree::visitTypeScope executor_group_c
TaskBuildSymbolTree: Build out plist 1
TaskBuildSymbolTree:   Param: 
--> TaskBuildSymbolTree::visitFunctionPrototype add_executor
<-- TaskBuildSymbolTree::visitFunctionPrototype add_executor
<-- TaskBuildSymbolTree::visitTypeScope executor_group_c
--> TaskBuildSymbolTree::visitTypeScope executor_claim_s
TaskBuildSymbolTree: Build out plist 1
TaskBuildSymbolTree:   Param: 
--> TaskBuildSymbolTree::visitField trait
TaskBuildSymbolTree: Add field to scope executor_claim_s
<-- TaskBuildSymbolTree::visitField trait
<-- TaskBuildSymbolTree::visitTypeScope executor_claim_s
--> TaskBuildSymbolTree::visitFunctionPrototype executor
<-- TaskBuildSymbolTree::visitFunctionPrototype executor
<-- TaskBuildSymbolTree::visitPackageScope
--> TaskBuildSymbolTree::visitTypeScope packed
TaskBuildSymbolTree: Build out plist 1
TaskBuildSymbolTree:   Param: 
<-- TaskBuildSymbolTree::visitTypeScope packed
--> TaskBuildSymbolTree::visitPackageScope
TaskBuildSymbolTree:   process name-elem std_pkg
Add package std_pkg with id 4
<-- TaskBuildSymbolTree::visitPackageScope
--> TaskBuildSymbolTree::visitPyImportStmt
<-- TaskBuildSymbolTree::visitPyImportStmt
--> TaskBuildSymbolTree::visitTypeScope pss_top
TaskBuildSymbolTree: No plist
--> TaskBuildSymbolTree::visitTypeScope Entry
TaskBuildSymbolTree: No plist
--> TaskBuildSymbolTree::visitFieldCompRef comp
<-- TaskBuildSymbolTree::visitFieldCompRef comp
--> TaskBuildSymbolTree::visitField i
TaskBuildSymbolTree: Add field to scope Entry
<-- TaskBuildSymbolTree::visitField i
--> TaskBuildSymbolTree::visitField j
TaskBuildSymbolTree: Add field to scope Entry
<-- TaskBuildSymbolTree::visitField j
--> TaskBuildSymbolTree::visitExecBlock
--> TaskBuildSymbolTree::visitExecScope
--> TaskBuildSymbolTree::visitExecStmt
<-- TaskBuildSymbolTree::visitExecStmt
--> TaskBuildSymbolTree::visitExecStmt
<-- TaskBuildSymbolTree::visitExecStmt
<-- TaskBuildSymbolTree::visitExecScope
<-- TaskBuildSymbolTree::visitExecBlock
<-- TaskBuildSymbolTree::visitTypeScope Entry
<-- TaskBuildSymbolTree::visitTypeScope pss_top
<-- TaskBuildSymbolTree::build
--> TaskApplyTypeExtensions::apply
--> TaskApplyTypeExtensions::visitSymbolScope ()
--> TaskApplyTypeExtensions::visitSymbolTypeScope pyobj
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolScope (addr_reg_pkg)
--> TaskApplyTypeExtensions::  Resolve Imports
--> TaskResolveImports::resolve
--> TaskResolveImports::visitPackageImportStmt executor_pkg
--> TaskResolveImports::  Resolve path
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier executor_pkg
--> TaskResolveRootRef::resolve executor_pkg
--> TaskResolveRootRef::visitSymbolScope id=executor_pkg (addr_reg_pkg)
TaskResolveRootRef: imports: 0x2750fb0
--> zsp::parser::TaskResolveEnumRef::resolve
--> zsp::parser::TaskResolveEnumRef::visitSymbolEnumScope endianness_e (looking for executor_pkg)
<-- zsp::parser::TaskResolveEnumRef::visitSymbolEnumScope endianness_e
--> zsp::parser::TaskResolveEnumRef::visitSymbolEnumScope reg_access (looking for executor_pkg)
<-- zsp::parser::TaskResolveEnumRef::visitSymbolEnumScope reg_access
<-- zsp::parser::TaskResolveEnumRef::resolve
--> TaskResolveRootRef::searchImports
--> TaskResolveRootRef::searchImport executor_pkg
TaskResolveRootRef: Skipping, due to unset import target
<-- TaskResolveRootRef::searchImports (nil)
TaskResolveRootRef: Failed to find symbol
<-- TaskResolveRootRef::visitSymbolScope
--> AstSymbolTableIterator::popScope 2
<-- AstSymbolTableIterator::popScope - sz=1
--> TaskResolveRootRef::visitSymbolScope id=executor_pkg ()
TaskResolveRootRef: imports: (nil)
TaskResolveRootRef: Found symbol @ index 2
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x28a7060 (1)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 2
TaskResolveSymbolPathRef: Elem: ChildIdx 2
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x28a8558
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 2
<-- TaskResolveRef::resolve 0x28a7060 (1)
<-- TaskResolveImports::  Resolve path
<-- TaskResolveImports::visitPackageImportStmt
<-- TaskResolveImports::resolve
<-- TaskApplyTypeExtensions::  Resolve Imports
--> TaskApplyTypeExtensions::visitSymbolTypeScope addr_space_base_c
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope addr_trait_s
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope empty_addr_trait_s
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope addr_handle_t
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope contiguous_addr_space_c
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope transparent_addr_space_c
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope addr_region_base_s
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope addr_region_s
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope transparent_addr_region_s
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope addr_claim_base_s
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope addr_claim_s
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope transparent_addr_claim_s
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolEnumScope
<-- TaskApplyTypeExtensions::visitSymbolEnumScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope packed_s
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope sizeof_s
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope sized_addr_handle_s
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::visitSymbolExtendScope
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier executor_base_c
--> TaskResolveRootRef::resolve executor_base_c
--> TaskResolveRootRef::visitSymbolScope id=executor_base_c (addr_reg_pkg)
TaskResolveRootRef: imports: 0x2750fb0
--> zsp::parser::TaskResolveEnumRef::resolve
--> zsp::parser::TaskResolveEnumRef::visitSymbolEnumScope endianness_e (looking for executor_base_c)
<-- zsp::parser::TaskResolveEnumRef::visitSymbolEnumScope endianness_e
--> zsp::parser::TaskResolveEnumRef::visitSymbolEnumScope reg_access (looking for executor_base_c)
<-- zsp::parser::TaskResolveEnumRef::visitSymbolEnumScope reg_access
<-- zsp::parser::TaskResolveEnumRef::resolve
--> TaskResolveRootRef::searchImports
--> TaskResolveRootRef::searchImport executor_base_c
TaskResolveRootRef: Imp Path[0] 0
AstSymbolTableIterator: Scope:  @ 0
TaskResolveRootRef: target_c: 0x28a8558 ; target_s: 0x28a8558
TaskResolveRootRef: Have a symbol scope (executor_pkg)
TaskResolveRootRef: Found the symbol (executor_base_c)
<-- TaskResolveRootRef::searchImport executor_base_c
<-- TaskResolveRootRef::searchImports 0x29a8a90
TaskResolveRootRef: Found symbol via imports
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x29a8a90 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 2
TaskResolveSymbolPathRef: Path: 0 2
TaskResolveSymbolPathRef: Elem: ChildIdx 2
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x28a8558
TaskResolveSymbolPathRef: Elem: ChildIdx 2
TaskResolveSymbolPathRef:   scope 0x28a8558 => 0x2830b90
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 2
TaskResolveRef:   0 2
<-- TaskResolveRef::resolve 0x29a8a90 (2)
AstSymbolTableIterator: Scope:  @ 0
AstSymbolTableIterator: Scope: executor_pkg @ 0
TaskApplyTypeExtensions: Target scope: executor_base_c
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::addChild read8 to executor_base_c
<-- TaskApplyTypeExtensions::addChild read8 to executor_base_c
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::addChild read16 to executor_base_c
<-- TaskApplyTypeExtensions::addChild read16 to executor_base_c
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::addChild read32 to executor_base_c
<-- TaskApplyTypeExtensions::addChild read32 to executor_base_c
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::addChild read64 to executor_base_c
<-- TaskApplyTypeExtensions::addChild read64 to executor_base_c
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::addChild write8 to executor_base_c
<-- TaskApplyTypeExtensions::addChild write8 to executor_base_c
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::addChild write16 to executor_base_c
<-- TaskApplyTypeExtensions::addChild write16 to executor_base_c
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::addChild write32 to executor_base_c
<-- TaskApplyTypeExtensions::addChild write32 to executor_base_c
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
--> TaskApplyTypeExtensions::addChild write64 to executor_base_c
<-- TaskApplyTypeExtensions::addChild write64 to executor_base_c
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
<-- TaskApplyTypeExtensions::visitSymbolExtendScope
--> TaskApplyTypeExtensions::visitSymbolEnumScope
<-- TaskApplyTypeExtensions::visitSymbolEnumScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope reg_c
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope reg_group_c
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> AstSymbolTableIterator::popScope 2
<-- AstSymbolTableIterator::popScope - sz=1
<-- TaskApplyTypeExtensions::visitSymbolScope
--> TaskApplyTypeExtensions::visitSymbolScope (executor_pkg)
--> TaskApplyTypeExtensions::  Resolve Imports
--> TaskResolveImports::resolve
--> TaskResolveImports::visitPackageImportStmt addr_reg_pkg
--> TaskResolveImports::  Resolve path
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_reg_pkg
--> TaskResolveRootRef::resolve addr_reg_pkg
--> TaskResolveRootRef::visitSymbolScope id=addr_reg_pkg (executor_pkg)
TaskResolveRootRef: imports: 0x28efbd0
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
--> TaskResolveRootRef::searchImports
--> TaskResolveRootRef::searchImport addr_reg_pkg
TaskResolveRootRef: Skipping, due to unset import target
<-- TaskResolveRootRef::searchImports (nil)
TaskResolveRootRef: Failed to find symbol
<-- TaskResolveRootRef::visitSymbolScope
--> AstSymbolTableIterator::popScope 2
<-- AstSymbolTableIterator::popScope - sz=1
--> TaskResolveRootRef::visitSymbolScope id=addr_reg_pkg ()
TaskResolveRootRef: imports: (nil)
TaskResolveRootRef: Found symbol @ index 1
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x29c8530 (1)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
<-- TaskResolveRef::resolve 0x29c8530 (1)
<-- TaskResolveImports::  Resolve path
<-- TaskResolveImports::visitPackageImportStmt
<-- TaskResolveImports::resolve
<-- TaskApplyTypeExtensions::  Resolve Imports
--> TaskApplyTypeExtensions::visitSymbolTypeScope executor_trait_s
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope empty_executor_trait_s
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope executor_base_c
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope executor_c
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope executor_group_c
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope executor_claim_s
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolFunctionScope
<-- TaskApplyTypeExtensions::visitSymbolFunctionScope
--> AstSymbolTableIterator::popScope 2
<-- AstSymbolTableIterator::popScope - sz=1
<-- TaskApplyTypeExtensions::visitSymbolScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope packed
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
--> TaskApplyTypeExtensions::visitSymbolScope (std_pkg)
--> AstSymbolTableIterator::popScope 2
<-- AstSymbolTableIterator::popScope - sz=1
<-- TaskApplyTypeExtensions::visitSymbolScope
--> TaskApplyTypeExtensions::visitSymbolTypeScope pss_top
<-- TaskApplyTypeExtensions::visitSymbolTypeScope
<-- TaskApplyTypeExtensions::visitSymbolScope
<-- TaskApplyTypeExtensions::apply
--> TaskResolveRefs::resolve (SymbolScope root)
--> TaskLinkActionCompRefFields::visitSymbolScope 
--> TaskLinkActionCompRefFields::visitSymbolTypeScope pyobj
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope pyobj
--> TaskLinkActionCompRefFields::visitSymbolScope addr_reg_pkg
--> TaskLinkActionCompRefFields::visitSymbolTypeScope addr_space_base_c
--> TaskLinkActionCompRefFields::visitComponent addr_space_base_c
<-- TaskLinkActionCompRefFields::visitComponent addr_space_base_c
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope addr_space_base_c
--> TaskLinkActionCompRefFields::visitSymbolTypeScope addr_trait_s
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope addr_trait_s
--> TaskLinkActionCompRefFields::visitSymbolTypeScope empty_addr_trait_s
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope empty_addr_trait_s
--> TaskLinkActionCompRefFields::visitSymbolTypeScope addr_handle_t
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope addr_handle_t
--> TaskLinkActionCompRefFields::visitSymbolTypeScope contiguous_addr_space_c
--> TaskLinkActionCompRefFields::visitComponent contiguous_addr_space_c
<-- TaskLinkActionCompRefFields::visitComponent contiguous_addr_space_c
--> TaskLinkActionCompRefFields::visitSymbolScope add_region
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope add_region
--> TaskLinkActionCompRefFields::visitSymbolScope add_nonallocatable_region
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope add_nonallocatable_region
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope contiguous_addr_space_c
--> TaskLinkActionCompRefFields::visitSymbolTypeScope transparent_addr_space_c
--> TaskLinkActionCompRefFields::visitComponent transparent_addr_space_c
<-- TaskLinkActionCompRefFields::visitComponent transparent_addr_space_c
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope transparent_addr_space_c
--> TaskLinkActionCompRefFields::visitSymbolTypeScope addr_region_base_s
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope addr_region_base_s
--> TaskLinkActionCompRefFields::visitSymbolTypeScope addr_region_s
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope addr_region_s
--> TaskLinkActionCompRefFields::visitSymbolTypeScope transparent_addr_region_s
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope transparent_addr_region_s
--> TaskLinkActionCompRefFields::visitSymbolTypeScope addr_claim_base_s
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope addr_claim_base_s
--> TaskLinkActionCompRefFields::visitSymbolTypeScope addr_claim_s
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope addr_claim_s
--> TaskLinkActionCompRefFields::visitSymbolTypeScope transparent_addr_claim_s
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope transparent_addr_claim_s
--> TaskLinkActionCompRefFields::visitSymbolScope endianness_e
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolScope endianness_e
--> TaskLinkActionCompRefFields::visitSymbolTypeScope packed_s
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope packed_s
--> TaskLinkActionCompRefFields::visitSymbolTypeScope sizeof_s
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope sizeof_s
--> TaskLinkActionCompRefFields::visitSymbolTypeScope sized_addr_handle_s
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope sized_addr_handle_s
--> TaskLinkActionCompRefFields::visitSymbolScope make_handle_from_claim
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolScope make_handle_from_claim
--> TaskLinkActionCompRefFields::visitSymbolScope make_handle_from_handle
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolScope make_handle_from_handle
--> TaskLinkActionCompRefFields::visitSymbolScope addr_value
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolScope addr_value
--> TaskLinkActionCompRefFields::visitSymbolScope read8
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolScope read8
--> TaskLinkActionCompRefFields::visitSymbolScope read16
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolScope read16
--> TaskLinkActionCompRefFields::visitSymbolScope read32
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolScope read32
--> TaskLinkActionCompRefFields::visitSymbolScope read64
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolScope read64
--> TaskLinkActionCompRefFields::visitSymbolScope write8
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolScope write8
--> TaskLinkActionCompRefFields::visitSymbolScope write16
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolScope write16
--> TaskLinkActionCompRefFields::visitSymbolScope write32
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolScope write32
--> TaskLinkActionCompRefFields::visitSymbolScope write64
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolScope write64
--> TaskLinkActionCompRefFields::visitSymbolScope 
--> TaskLinkActionCompRefFields::visitSymbolScope read8
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope read8
--> TaskLinkActionCompRefFields::visitSymbolScope read16
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope read16
--> TaskLinkActionCompRefFields::visitSymbolScope read32
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope read32
--> TaskLinkActionCompRefFields::visitSymbolScope read64
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope read64
--> TaskLinkActionCompRefFields::visitSymbolScope write8
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope write8
--> TaskLinkActionCompRefFields::visitSymbolScope write16
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope write16
--> TaskLinkActionCompRefFields::visitSymbolScope write32
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope write32
--> TaskLinkActionCompRefFields::visitSymbolScope write64
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope write64
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolScope 
--> TaskLinkActionCompRefFields::visitSymbolScope reg_access
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolScope reg_access
--> TaskLinkActionCompRefFields::visitSymbolTypeScope reg_c
--> TaskLinkActionCompRefFields::visitComponent reg_c
<-- TaskLinkActionCompRefFields::visitComponent reg_c
--> TaskLinkActionCompRefFields::visitSymbolScope read
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope read
--> TaskLinkActionCompRefFields::visitSymbolScope write
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope write
--> TaskLinkActionCompRefFields::visitSymbolScope read_val
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope read_val
--> TaskLinkActionCompRefFields::visitSymbolScope write_val
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope write_val
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope reg_c
--> TaskLinkActionCompRefFields::visitSymbolTypeScope reg_group_c
--> TaskLinkActionCompRefFields::visitComponent reg_group_c
<-- TaskLinkActionCompRefFields::visitComponent reg_group_c
--> TaskLinkActionCompRefFields::visitSymbolScope get_offset_of_instance
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope get_offset_of_instance
--> TaskLinkActionCompRefFields::visitSymbolScope get_offset_of_instance_array
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope get_offset_of_instance_array
--> TaskLinkActionCompRefFields::visitSymbolScope set_handle
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope set_handle
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope reg_group_c
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
<-- TaskLinkActionCompRefFields::visitSymbolScope addr_reg_pkg
--> TaskLinkActionCompRefFields::visitSymbolScope executor_pkg
--> TaskLinkActionCompRefFields::visitSymbolTypeScope executor_trait_s
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope executor_trait_s
--> TaskLinkActionCompRefFields::visitSymbolTypeScope empty_executor_trait_s
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope empty_executor_trait_s
--> TaskLinkActionCompRefFields::visitSymbolTypeScope executor_base_c
--> TaskLinkActionCompRefFields::visitComponent executor_base_c
<-- TaskLinkActionCompRefFields::visitComponent executor_base_c
--> TaskLinkActionCompRefFields::visitSymbolScope read8
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope read8
--> TaskLinkActionCompRefFields::visitSymbolScope read16
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope read16
--> TaskLinkActionCompRefFields::visitSymbolScope read32
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope read32
--> TaskLinkActionCompRefFields::visitSymbolScope read64
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope read64
--> TaskLinkActionCompRefFields::visitSymbolScope write8
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope write8
--> TaskLinkActionCompRefFields::visitSymbolScope write16
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope write16
--> TaskLinkActionCompRefFields::visitSymbolScope write32
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope write32
--> TaskLinkActionCompRefFields::visitSymbolScope write64
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope write64
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope executor_base_c
--> TaskLinkActionCompRefFields::visitSymbolTypeScope executor_c
--> TaskLinkActionCompRefFields::visitComponent executor_c
<-- TaskLinkActionCompRefFields::visitComponent executor_c
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope executor_c
--> TaskLinkActionCompRefFields::visitSymbolTypeScope executor_group_c
--> TaskLinkActionCompRefFields::visitComponent executor_group_c
<-- TaskLinkActionCompRefFields::visitComponent executor_group_c
--> TaskLinkActionCompRefFields::visitSymbolScope add_executor
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope add_executor
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope executor_group_c
--> TaskLinkActionCompRefFields::visitSymbolTypeScope executor_claim_s
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope executor_claim_s
--> TaskLinkActionCompRefFields::visitSymbolScope executor
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolScope executor
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
<-- TaskLinkActionCompRefFields::visitSymbolScope executor_pkg
--> TaskLinkActionCompRefFields::visitSymbolTypeScope packed
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope packed
--> TaskLinkActionCompRefFields::visitSymbolScope std_pkg
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
<-- TaskLinkActionCompRefFields::visitSymbolScope std_pkg
--> TaskLinkActionCompRefFields::visitSymbolTypeScope pss_top
--> TaskLinkActionCompRefFields::visitComponent pss_top
<-- TaskLinkActionCompRefFields::visitComponent pss_top
--> TaskLinkActionCompRefFields::visitSymbolTypeScope Entry
--> TaskLinkActionCompRefFields::visitAction Entry
AstSymbolTableIterator: NOTE: skip index 0 with idx -100
TaskLinkActionCompRefFields: Parent scope: pss_top
<-- TaskLinkActionCompRefFields::visitAction Entry
--> TaskLinkActionCompRefFields::visitSymbolScope 
--> AstSymbolTableIterator::popScope 5
<-- AstSymbolTableIterator::popScope - sz=4
<-- TaskLinkActionCompRefFields::visitSymbolScope 
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope Entry
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
<-- TaskLinkActionCompRefFields::visitSymbolTypeScope pss_top
--> AstSymbolTableIterator::popScope 2
<-- AstSymbolTableIterator::popScope - sz=1
<-- TaskLinkActionCompRefFields::visitSymbolScope 
--> TaskResolveRefs::visitSymbolTypeScope pyobj (param=false specialized=false)
TaskResolveRefs: No super type
--> AstSymbolTableIterator::popScope 2
<-- AstSymbolTableIterator::popScope - sz=1
<-- TaskResolveRefs::visitSymbolTypeScope pyobj
--> TaskResolveRefs::visitSymbolScope "addr_reg_pkg"
--> AstSymbolTableIterator::pushNamedScope addr_reg_pkg
<-- AstSymbolTableIterator::pushNamedScope addr_reg_pkg - success sz=2
--> TaskResolveRefs::  Resolve Imports
--> TaskResolveImports::resolve
--> TaskResolveImports::visitPackageImportStmt executor_pkg
TaskResolveImports: Skip resolution, since the target is already set
<-- TaskResolveImports::visitPackageImportStmt
<-- TaskResolveImports::resolve
<-- TaskResolveRefs::  Resolve Imports
--> TaskResolveRefs::visitSymbolTypeScope addr_space_base_c (param=false specialized=false)
TaskResolveRefs: No super type
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
<-- TaskResolveRefs::visitSymbolTypeScope addr_space_base_c
--> TaskResolveRefs::visitSymbolTypeScope addr_trait_s (param=false specialized=false)
TaskResolveRefs: No super type
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
<-- TaskResolveRefs::visitSymbolTypeScope addr_trait_s
--> TaskResolveRefs::visitSymbolTypeScope empty_addr_trait_s (param=false specialized=false)
TaskResolveRefs: empty_addr_trait_s Has a super type ... resolving
--> TaskResolveRefs::visitTypeIdentifier
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_trait_s
--> TaskResolveRootRef::resolve addr_trait_s
--> TaskResolveRootRef::visitSymbolTypeScope id=addr_trait_s (empty_addr_trait_s)
--> TaskResolveRootRef::visitSymbolScope id=addr_trait_s (empty_addr_trait_s)
TaskResolveRootRef: imports: (nil)
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
TaskResolveRootRef: Failed to find symbol
<-- TaskResolveRootRef::visitSymbolScope
TaskResolveRootRef: TypeScope: m_ref=(nil) plist=(nil)
<-- TaskResolveRootRef::visitSymbolTypeScope (nil)
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
--> TaskResolveRootRef::visitSymbolScope id=addr_trait_s (addr_reg_pkg)
TaskResolveRootRef: imports: 0x2750fb0
TaskResolveRootRef: Found symbol @ index 1
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x2823ca0 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x278a050
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 1
<-- TaskResolveRef::resolve 0x2823ca0 (2)
<-- TaskResolveRefs::visitTypeIdentifier
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
<-- TaskResolveRefs::visitSymbolTypeScope empty_addr_trait_s
--> TaskResolveRefs::visitSymbolTypeScope addr_handle_t (param=false specialized=false)
TaskResolveRefs: No super type
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
<-- TaskResolveRefs::visitSymbolTypeScope addr_handle_t
--> TaskResolveRefs::visitSymbolTypeScope contiguous_addr_space_c (param=true specialized=false)
TaskResolveRefs: Note: Skipping symbol resolution in a templated type
<-- TaskResolveRefs::visitSymbolTypeScope contiguous_addr_space_c
--> TaskResolveRefs::visitSymbolTypeScope transparent_addr_space_c (param=true specialized=false)
TaskResolveRefs: Note: Skipping symbol resolution in a templated type
<-- TaskResolveRefs::visitSymbolTypeScope transparent_addr_space_c
--> TaskResolveRefs::visitSymbolTypeScope addr_region_base_s (param=false specialized=false)
TaskResolveRefs: No super type
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
<-- TaskResolveRefs::visitSymbolTypeScope addr_region_base_s
--> TaskResolveRefs::visitSymbolTypeScope addr_region_s (param=true specialized=false)
TaskResolveRefs: Note: Skipping symbol resolution in a templated type
<-- TaskResolveRefs::visitSymbolTypeScope addr_region_s
--> TaskResolveRefs::visitSymbolTypeScope transparent_addr_region_s (param=true specialized=false)
TaskResolveRefs: Note: Skipping symbol resolution in a templated type
<-- TaskResolveRefs::visitSymbolTypeScope transparent_addr_region_s
--> TaskResolveRefs::visitSymbolTypeScope addr_claim_base_s (param=false specialized=false)
TaskResolveRefs: No super type
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
<-- TaskResolveRefs::visitSymbolTypeScope addr_claim_base_s
--> TaskResolveRefs::visitSymbolTypeScope addr_claim_s (param=true specialized=false)
TaskResolveRefs: Note: Skipping symbol resolution in a templated type
<-- TaskResolveRefs::visitSymbolTypeScope addr_claim_s
--> TaskResolveRefs::visitSymbolTypeScope transparent_addr_claim_s (param=true specialized=false)
TaskResolveRefs: Note: Skipping symbol resolution in a templated type
<-- TaskResolveRefs::visitSymbolTypeScope transparent_addr_claim_s
--> TaskResolveRefs::visitSymbolScope "endianness_e"
--> AstSymbolTableIterator::pushNamedScope endianness_e
<-- AstSymbolTableIterator::pushNamedScope endianness_e - success sz=3
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
<-- TaskResolveRefs::visitSymbolScope "endianness_e"
--> TaskResolveRefs::visitSymbolTypeScope packed_s (param=true specialized=false)
TaskResolveRefs: Note: Skipping symbol resolution in a templated type
<-- TaskResolveRefs::visitSymbolTypeScope packed_s
--> TaskResolveRefs::visitSymbolTypeScope sizeof_s (param=true specialized=false)
TaskResolveRefs: Note: Skipping symbol resolution in a templated type
<-- TaskResolveRefs::visitSymbolTypeScope sizeof_s
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (addr_reg_pkg)
TaskResolveRootRef: imports: 0x2750fb0
TaskResolveRootRef: Found symbol @ index 3
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x2998c50 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x2998c50 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRefs::visitSymbolTypeScope sized_addr_handle_s (param=true specialized=false)
TaskResolveRefs: Note: Skipping symbol resolution in a templated type
<-- TaskResolveRefs::visitSymbolTypeScope sized_addr_handle_s
--> TaskResolveRefs::visitSymbolFunctionScope make_handle_from_claim (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (addr_reg_pkg)
TaskResolveRootRef: imports: 0x2750fb0
TaskResolveRootRef: Found symbol @ index 3
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x28af970 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x28af970 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_claim_base_s
--> TaskResolveRootRef::resolve addr_claim_base_s
--> TaskResolveRootRef::visitSymbolScope id=addr_claim_base_s (addr_reg_pkg)
TaskResolveRootRef: imports: 0x2750fb0
TaskResolveRootRef: Found symbol @ index 9
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x29cd390 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 9
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 9
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x29c4be0
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 9
<-- TaskResolveRef::resolve 0x29cd390 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope make_handle_from_claim
--> TaskResolveRefs::visitSymbolFunctionScope make_handle_from_handle (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (addr_reg_pkg)
TaskResolveRootRef: imports: 0x2750fb0
TaskResolveRootRef: Found symbol @ index 3
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x27fc990 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x27fc990 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (addr_reg_pkg)
TaskResolveRootRef: imports: 0x2750fb0
TaskResolveRootRef: Found symbol @ index 3
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x28ab9c0 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x28ab9c0 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope make_handle_from_handle
--> TaskResolveRefs::visitSymbolFunctionScope addr_value (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (addr_reg_pkg)
TaskResolveRootRef: imports: 0x2750fb0
TaskResolveRootRef: Found symbol @ index 3
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x28fafc0 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x28fafc0 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope addr_value
--> TaskResolveRefs::visitSymbolFunctionScope read8 (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (addr_reg_pkg)
TaskResolveRootRef: imports: 0x2750fb0
TaskResolveRootRef: Found symbol @ index 3
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x29b2e90 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x29b2e90 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope read8
--> TaskResolveRefs::visitSymbolFunctionScope read16 (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (addr_reg_pkg)
TaskResolveRootRef: imports: 0x2750fb0
TaskResolveRootRef: Found symbol @ index 3
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x2904b30 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x2904b30 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope read16
--> TaskResolveRefs::visitSymbolFunctionScope read32 (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (addr_reg_pkg)
TaskResolveRootRef: imports: 0x2750fb0
TaskResolveRootRef: Found symbol @ index 3
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x280e770 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x280e770 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope read32
--> TaskResolveRefs::visitSymbolFunctionScope read64 (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (addr_reg_pkg)
TaskResolveRootRef: imports: 0x2750fb0
TaskResolveRootRef: Found symbol @ index 3
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x2904a10 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x2904a10 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope read64
--> TaskResolveRefs::visitSymbolFunctionScope write8 (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (addr_reg_pkg)
TaskResolveRootRef: imports: 0x2750fb0
TaskResolveRootRef: Found symbol @ index 3
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x29bf280 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x29bf280 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope write8
--> TaskResolveRefs::visitSymbolFunctionScope write16 (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (addr_reg_pkg)
TaskResolveRootRef: imports: 0x2750fb0
TaskResolveRootRef: Found symbol @ index 3
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x28684a0 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x28684a0 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope write16
--> TaskResolveRefs::visitSymbolFunctionScope write32 (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (addr_reg_pkg)
TaskResolveRootRef: imports: 0x2750fb0
TaskResolveRootRef: Found symbol @ index 3
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x2875160 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x2875160 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope write32
--> TaskResolveRefs::visitSymbolFunctionScope write64 (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (addr_reg_pkg)
TaskResolveRootRef: imports: 0x2750fb0
TaskResolveRootRef: Found symbol @ index 3
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x28164b0 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x28164b0 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope write64
--> TaskResolveRefs::visitSymbolExtendScope
TaskResolveRefs: Note: Skipping during core symbol resolution
<-- TaskResolveRefs::visitSymbolExtendScope
--> TaskResolveRefs::visitSymbolScope "reg_access"
--> AstSymbolTableIterator::pushNamedScope reg_access
<-- AstSymbolTableIterator::pushNamedScope reg_access - success sz=3
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
<-- TaskResolveRefs::visitSymbolScope "reg_access"
--> TaskResolveRefs::visitSymbolTypeScope reg_c (param=true specialized=false)
TaskResolveRefs: Note: Skipping symbol resolution in a templated type
<-- TaskResolveRefs::visitSymbolTypeScope reg_c
--> TaskResolveRefs::visitSymbolTypeScope reg_group_c (param=false specialized=false)
TaskResolveRefs: No super type
--> TaskResolveRefs::visitSymbolFunctionScope get_offset_of_instance (1)
--> TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope get_offset_of_instance
--> TaskResolveRefs::visitSymbolFunctionScope get_offset_of_instance_array (1)
--> TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope get_offset_of_instance_array
--> TaskResolveRefs::visitSymbolFunctionScope set_handle (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolTypeScope id=addr_handle_t (reg_group_c)
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (reg_group_c)
TaskResolveRootRef: imports: (nil)
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
TaskResolveRootRef: Failed to find symbol
<-- TaskResolveRootRef::visitSymbolScope
TaskResolveRootRef: TypeScope: m_ref=(nil) plist=(nil)
<-- TaskResolveRootRef::visitSymbolTypeScope (nil)
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (addr_reg_pkg)
TaskResolveRootRef: imports: 0x2750fb0
TaskResolveRootRef: Found symbol @ index 3
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x29c79f0 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x29c79f0 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope set_handle
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
<-- TaskResolveRefs::visitSymbolTypeScope reg_group_c
--> AstSymbolTableIterator::popScope 2
<-- AstSymbolTableIterator::popScope - sz=1
<-- TaskResolveRefs::visitSymbolScope "addr_reg_pkg"
--> TaskResolveRefs::visitSymbolScope "executor_pkg"
--> AstSymbolTableIterator::pushNamedScope executor_pkg
<-- AstSymbolTableIterator::pushNamedScope executor_pkg - success sz=2
--> TaskResolveRefs::  Resolve Imports
--> TaskResolveImports::resolve
--> TaskResolveImports::visitPackageImportStmt addr_reg_pkg
TaskResolveImports: Skip resolution, since the target is already set
<-- TaskResolveImports::visitPackageImportStmt
<-- TaskResolveImports::resolve
<-- TaskResolveRefs::  Resolve Imports
--> TaskResolveRefs::visitSymbolTypeScope executor_trait_s (param=false specialized=false)
TaskResolveRefs: No super type
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
<-- TaskResolveRefs::visitSymbolTypeScope executor_trait_s
--> TaskResolveRefs::visitSymbolTypeScope empty_executor_trait_s (param=false specialized=false)
TaskResolveRefs: empty_executor_trait_s Has a super type ... resolving
--> TaskResolveRefs::visitTypeIdentifier
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier executor_trait_s
--> TaskResolveRootRef::resolve executor_trait_s
--> TaskResolveRootRef::visitSymbolTypeScope id=executor_trait_s (empty_executor_trait_s)
--> TaskResolveRootRef::visitSymbolScope id=executor_trait_s (empty_executor_trait_s)
TaskResolveRootRef: imports: (nil)
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
TaskResolveRootRef: Failed to find symbol
<-- TaskResolveRootRef::visitSymbolScope
TaskResolveRootRef: TypeScope: m_ref=(nil) plist=(nil)
<-- TaskResolveRootRef::visitSymbolTypeScope (nil)
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
--> TaskResolveRootRef::visitSymbolScope id=executor_trait_s (executor_pkg)
TaskResolveRootRef: imports: 0x28efbd0
TaskResolveRootRef: Found symbol @ index 0
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x287a2e0 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 2
TaskResolveSymbolPathRef: Path: 0 0
TaskResolveSymbolPathRef: Elem: ChildIdx 2
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x28a8558
TaskResolveSymbolPathRef: Elem: ChildIdx 0
TaskResolveSymbolPathRef:   scope 0x28a8558 => 0x29a4150
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 2
TaskResolveRef:   0 0
<-- TaskResolveRef::resolve 0x287a2e0 (2)
<-- TaskResolveRefs::visitTypeIdentifier
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
<-- TaskResolveRefs::visitSymbolTypeScope empty_executor_trait_s
--> TaskResolveRefs::visitSymbolTypeScope executor_base_c (param=false specialized=false)
TaskResolveRefs: No super type
--> TaskResolveRefs::visitSymbolFunctionScope read8 (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolTypeScope id=addr_handle_t (executor_base_c)
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (executor_base_c)
TaskResolveRootRef: imports: (nil)
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
TaskResolveRootRef: Failed to find symbol
<-- TaskResolveRootRef::visitSymbolScope
TaskResolveRootRef: TypeScope: m_ref=(nil) plist=(nil)
<-- TaskResolveRootRef::visitSymbolTypeScope (nil)
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (executor_pkg)
TaskResolveRootRef: imports: 0x28efbd0
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
--> TaskResolveRootRef::searchImports
--> TaskResolveRootRef::searchImport addr_handle_t
TaskResolveRootRef: Imp Path[0] 0
AstSymbolTableIterator: Scope:  @ 0
TaskResolveRootRef: target_c: 0x29cc668 ; target_s: 0x29cc668
TaskResolveRootRef: Have a symbol scope (addr_reg_pkg)
TaskResolveRootRef: Found the symbol (addr_handle_t)
<-- TaskResolveRootRef::searchImport addr_handle_t
<-- TaskResolveRootRef::searchImports 0x2815eb0
TaskResolveRootRef: Found symbol via imports
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x2815eb0 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x2815eb0 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope read8
--> TaskResolveRefs::visitSymbolFunctionScope read16 (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolTypeScope id=addr_handle_t (executor_base_c)
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (executor_base_c)
TaskResolveRootRef: imports: (nil)
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
TaskResolveRootRef: Failed to find symbol
<-- TaskResolveRootRef::visitSymbolScope
TaskResolveRootRef: TypeScope: m_ref=(nil) plist=(nil)
<-- TaskResolveRootRef::visitSymbolTypeScope (nil)
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (executor_pkg)
TaskResolveRootRef: imports: 0x28efbd0
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
--> TaskResolveRootRef::searchImports
--> TaskResolveRootRef::searchImport addr_handle_t
TaskResolveRootRef: Imp Path[0] 0
AstSymbolTableIterator: Scope:  @ 0
TaskResolveRootRef: target_c: 0x29cc668 ; target_s: 0x29cc668
TaskResolveRootRef: Have a symbol scope (addr_reg_pkg)
TaskResolveRootRef: Found the symbol (addr_handle_t)
<-- TaskResolveRootRef::searchImport addr_handle_t
<-- TaskResolveRootRef::searchImports 0x2875950
TaskResolveRootRef: Found symbol via imports
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x2875950 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x2875950 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope read16
--> TaskResolveRefs::visitSymbolFunctionScope read32 (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolTypeScope id=addr_handle_t (executor_base_c)
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (executor_base_c)
TaskResolveRootRef: imports: (nil)
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
TaskResolveRootRef: Failed to find symbol
<-- TaskResolveRootRef::visitSymbolScope
TaskResolveRootRef: TypeScope: m_ref=(nil) plist=(nil)
<-- TaskResolveRootRef::visitSymbolTypeScope (nil)
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (executor_pkg)
TaskResolveRootRef: imports: 0x28efbd0
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
--> TaskResolveRootRef::searchImports
--> TaskResolveRootRef::searchImport addr_handle_t
TaskResolveRootRef: Imp Path[0] 0
AstSymbolTableIterator: Scope:  @ 0
TaskResolveRootRef: target_c: 0x29cc668 ; target_s: 0x29cc668
TaskResolveRootRef: Have a symbol scope (addr_reg_pkg)
TaskResolveRootRef: Found the symbol (addr_handle_t)
<-- TaskResolveRootRef::searchImport addr_handle_t
<-- TaskResolveRootRef::searchImports 0x29c99a0
TaskResolveRootRef: Found symbol via imports
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x29c99a0 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x29c99a0 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope read32
--> TaskResolveRefs::visitSymbolFunctionScope read64 (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolTypeScope id=addr_handle_t (executor_base_c)
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (executor_base_c)
TaskResolveRootRef: imports: (nil)
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
TaskResolveRootRef: Failed to find symbol
<-- TaskResolveRootRef::visitSymbolScope
TaskResolveRootRef: TypeScope: m_ref=(nil) plist=(nil)
<-- TaskResolveRootRef::visitSymbolTypeScope (nil)
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (executor_pkg)
TaskResolveRootRef: imports: 0x28efbd0
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
--> TaskResolveRootRef::searchImports
--> TaskResolveRootRef::searchImport addr_handle_t
TaskResolveRootRef: Imp Path[0] 0
AstSymbolTableIterator: Scope:  @ 0
TaskResolveRootRef: target_c: 0x29cc668 ; target_s: 0x29cc668
TaskResolveRootRef: Have a symbol scope (addr_reg_pkg)
TaskResolveRootRef: Found the symbol (addr_handle_t)
<-- TaskResolveRootRef::searchImport addr_handle_t
<-- TaskResolveRootRef::searchImports 0x29c02f0
TaskResolveRootRef: Found symbol via imports
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x29c02f0 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x29c02f0 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope read64
--> TaskResolveRefs::visitSymbolFunctionScope write8 (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolTypeScope id=addr_handle_t (executor_base_c)
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (executor_base_c)
TaskResolveRootRef: imports: (nil)
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
TaskResolveRootRef: Failed to find symbol
<-- TaskResolveRootRef::visitSymbolScope
TaskResolveRootRef: TypeScope: m_ref=(nil) plist=(nil)
<-- TaskResolveRootRef::visitSymbolTypeScope (nil)
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (executor_pkg)
TaskResolveRootRef: imports: 0x28efbd0
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
--> TaskResolveRootRef::searchImports
--> TaskResolveRootRef::searchImport addr_handle_t
TaskResolveRootRef: Imp Path[0] 0
AstSymbolTableIterator: Scope:  @ 0
TaskResolveRootRef: target_c: 0x29cc668 ; target_s: 0x29cc668
TaskResolveRootRef: Have a symbol scope (addr_reg_pkg)
TaskResolveRootRef: Found the symbol (addr_handle_t)
<-- TaskResolveRootRef::searchImport addr_handle_t
<-- TaskResolveRootRef::searchImports 0x28ffc50
TaskResolveRootRef: Found symbol via imports
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x28ffc50 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x28ffc50 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope write8
--> TaskResolveRefs::visitSymbolFunctionScope write16 (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolTypeScope id=addr_handle_t (executor_base_c)
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (executor_base_c)
TaskResolveRootRef: imports: (nil)
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
TaskResolveRootRef: Failed to find symbol
<-- TaskResolveRootRef::visitSymbolScope
TaskResolveRootRef: TypeScope: m_ref=(nil) plist=(nil)
<-- TaskResolveRootRef::visitSymbolTypeScope (nil)
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (executor_pkg)
TaskResolveRootRef: imports: 0x28efbd0
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
--> TaskResolveRootRef::searchImports
--> TaskResolveRootRef::searchImport addr_handle_t
TaskResolveRootRef: Imp Path[0] 0
AstSymbolTableIterator: Scope:  @ 0
TaskResolveRootRef: target_c: 0x29cc668 ; target_s: 0x29cc668
TaskResolveRootRef: Have a symbol scope (addr_reg_pkg)
TaskResolveRootRef: Found the symbol (addr_handle_t)
<-- TaskResolveRootRef::searchImport addr_handle_t
<-- TaskResolveRootRef::searchImports 0x2904aa0
TaskResolveRootRef: Found symbol via imports
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x2904aa0 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x2904aa0 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope write16
--> TaskResolveRefs::visitSymbolFunctionScope write32 (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolTypeScope id=addr_handle_t (executor_base_c)
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (executor_base_c)
TaskResolveRootRef: imports: (nil)
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
TaskResolveRootRef: Failed to find symbol
<-- TaskResolveRootRef::visitSymbolScope
TaskResolveRootRef: TypeScope: m_ref=(nil) plist=(nil)
<-- TaskResolveRootRef::visitSymbolTypeScope (nil)
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (executor_pkg)
TaskResolveRootRef: imports: 0x28efbd0
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
--> TaskResolveRootRef::searchImports
--> TaskResolveRootRef::searchImport addr_handle_t
TaskResolveRootRef: Imp Path[0] 0
AstSymbolTableIterator: Scope:  @ 0
TaskResolveRootRef: target_c: 0x29cc668 ; target_s: 0x29cc668
TaskResolveRootRef: Have a symbol scope (addr_reg_pkg)
TaskResolveRootRef: Found the symbol (addr_handle_t)
<-- TaskResolveRootRef::searchImport addr_handle_t
<-- TaskResolveRootRef::searchImports 0x2821aa0
TaskResolveRootRef: Found symbol via imports
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x2821aa0 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x2821aa0 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope write32
--> TaskResolveRefs::visitSymbolFunctionScope write64 (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier addr_handle_t
--> TaskResolveRootRef::resolve addr_handle_t
--> TaskResolveRootRef::visitSymbolTypeScope id=addr_handle_t (executor_base_c)
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (executor_base_c)
TaskResolveRootRef: imports: (nil)
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
TaskResolveRootRef: Failed to find symbol
<-- TaskResolveRootRef::visitSymbolScope
TaskResolveRootRef: TypeScope: m_ref=(nil) plist=(nil)
<-- TaskResolveRootRef::visitSymbolTypeScope (nil)
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
--> TaskResolveRootRef::visitSymbolScope id=addr_handle_t (executor_pkg)
TaskResolveRootRef: imports: 0x28efbd0
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
--> TaskResolveRootRef::searchImports
--> TaskResolveRootRef::searchImport addr_handle_t
TaskResolveRootRef: Imp Path[0] 0
AstSymbolTableIterator: Scope:  @ 0
TaskResolveRootRef: target_c: 0x29cc668 ; target_s: 0x29cc668
TaskResolveRootRef: Have a symbol scope (addr_reg_pkg)
TaskResolveRootRef: Found the symbol (addr_handle_t)
<-- TaskResolveRootRef::searchImport addr_handle_t
<-- TaskResolveRootRef::searchImports 0x279fd10
TaskResolveRootRef: Found symbol via imports
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x279fd10 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 1
TaskResolveRef:   0 3
<-- TaskResolveRef::resolve 0x279fd10 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope write64
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
<-- TaskResolveRefs::visitSymbolTypeScope executor_base_c
--> TaskResolveRefs::visitSymbolTypeScope executor_c (param=true specialized=false)
TaskResolveRefs: Note: Skipping symbol resolution in a templated type
<-- TaskResolveRefs::visitSymbolTypeScope executor_c
--> TaskResolveRefs::visitSymbolTypeScope executor_group_c (param=true specialized=false)
TaskResolveRefs: Note: Skipping symbol resolution in a templated type
<-- TaskResolveRefs::visitSymbolTypeScope executor_group_c
--> TaskResolveRefs::visitSymbolTypeScope executor_claim_s (param=true specialized=false)
TaskResolveRefs: Note: Skipping symbol resolution in a templated type
<-- TaskResolveRefs::visitSymbolTypeScope executor_claim_s
--> TaskResolveRefs::visitSymbolFunctionScope executor (1)
--> TaskResolveRefs::visitFunctionPrototype
--> TaskResolveRefs::visitDataTypeUserDefined
--> TaskResolveRef::resolve
--> TaskResolveRef::visitTypeIdentifier executor_base_c
--> TaskResolveRootRef::resolve executor_base_c
--> TaskResolveRootRef::visitSymbolScope id=executor_base_c (executor_pkg)
TaskResolveRootRef: imports: 0x28efbd0
TaskResolveRootRef: Found symbol @ index 2
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x2966bf0 (2)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 2
TaskResolveSymbolPathRef: Path: 0 2
TaskResolveSymbolPathRef: Elem: ChildIdx 2
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x28a8558
TaskResolveSymbolPathRef: Elem: ChildIdx 2
TaskResolveSymbolPathRef:   scope 0x28a8558 => 0x2830b90
<-- TaskResolveSymbolPathRef::resolve
<-- TaskResolveRef::visitTypeIdentifier
TaskResolveRef: Result:
TaskResolveRef:   0 2
TaskResolveRef:   0 2
<-- TaskResolveRef::resolve 0x2966bf0 (2)
TaskResolveRefs: Success
<-- TaskResolveRefs::visitDataTypeUserDefined
<-- TaskResolveRefs::visitFunctionPrototype
<-- TaskResolveRefs::visitSymbolFunctionScope executor
--> AstSymbolTableIterator::popScope 2
<-- AstSymbolTableIterator::popScope - sz=1
<-- TaskResolveRefs::visitSymbolScope "executor_pkg"
--> TaskResolveRefs::visitSymbolTypeScope packed (param=true specialized=false)
TaskResolveRefs: Note: Skipping symbol resolution in a templated type
<-- TaskResolveRefs::visitSymbolTypeScope packed
--> TaskResolveRefs::visitSymbolScope "std_pkg"
--> AstSymbolTableIterator::pushNamedScope std_pkg
<-- AstSymbolTableIterator::pushNamedScope std_pkg - success sz=2
--> AstSymbolTableIterator::popScope 2
<-- AstSymbolTableIterator::popScope - sz=1
<-- TaskResolveRefs::visitSymbolScope "std_pkg"
--> TaskResolveRefs::visitSymbolTypeScope pss_top (param=false specialized=false)
TaskResolveRefs: No super type
--> TaskResolveRefs::visitSymbolTypeScope Entry (param=false specialized=false)
TaskResolveRefs: No super type
--> TaskResolveRefs::visitFieldCompRef
TaskResolveRefs: Note: Skip during core symbol resolution
<-- TaskResolveRefs::visitFieldCompRef
--> TaskResolveRefs::visitSymbolExecScope ""
--> TaskResolveRefs::visitExprRefPathContext i
--> TaskResolveRef::resolve (RefPath)
--> TaskResolveRef::visitExprId i
--> TaskResolveRootRef::resolve i
--> TaskResolveRootRef::visitSymbolExecScope
<-- TaskResolveRootRef::visitSymbolExecScope
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
--> TaskResolveRootRef::visitSymbolTypeScope id=i (Entry)
--> TaskResolveRootRef::visitSymbolScope id=i (Entry)
TaskResolveRootRef: imports: (nil)
TaskResolveRootRef: Found symbol @ index 1
<-- TaskResolveRootRef::visitSymbolScope
TaskResolveRootRef: TypeScope: m_ref=0x284eb00 plist=(nil)
<-- TaskResolveRootRef::visitSymbolTypeScope 0x284eb00
<-- TaskResolveRootRef::resolve 0x284eb00 (3)
<-- TaskResolveRef::visitExprId i (0x284eb00)
<-- TaskResolveRef::resolve (RefPath) 0x284eb00 (3)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 6
TaskResolveSymbolPathRef: Path: 0 0
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Elem: ChildIdx 6
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29813a0
TaskResolveSymbolPathRef: Elem: ChildIdx 0
TaskResolveSymbolPathRef:   scope 0x29813a0 => 0x298fb20
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x298fb20 => 0x27cbd00
<-- TaskResolveSymbolPathRef::resolve
--> zsp::parser::TaskGetElemSymbolScope::visitField i
<-- zsp::parser::TaskGetElemSymbolScope::visitField i
<-- TaskResolveRefs::visitExprRefPathContext
--> TaskResolveRefs::visitExprRefPathContext j
--> TaskResolveRef::resolve (RefPath)
--> TaskResolveRef::visitExprId j
--> TaskResolveRootRef::resolve j
--> TaskResolveRootRef::visitSymbolExecScope
<-- TaskResolveRootRef::visitSymbolExecScope
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
--> TaskResolveRootRef::visitSymbolTypeScope id=j (Entry)
--> TaskResolveRootRef::visitSymbolScope id=j (Entry)
TaskResolveRootRef: imports: (nil)
TaskResolveRootRef: Found symbol @ index 2
<-- TaskResolveRootRef::visitSymbolScope
TaskResolveRootRef: TypeScope: m_ref=0x2728ca0 plist=(nil)
<-- TaskResolveRootRef::visitSymbolTypeScope 0x2728ca0
<-- TaskResolveRootRef::resolve 0x2728ca0 (3)
<-- TaskResolveRef::visitExprId j (0x2728ca0)
<-- TaskResolveRef::resolve (RefPath) 0x2728ca0 (3)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 6
TaskResolveSymbolPathRef: Path: 0 0
TaskResolveSymbolPathRef: Path: 0 2
TaskResolveSymbolPathRef: Elem: ChildIdx 6
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29813a0
TaskResolveSymbolPathRef: Elem: ChildIdx 0
TaskResolveSymbolPathRef:   scope 0x29813a0 => 0x298fb20
TaskResolveSymbolPathRef: Elem: ChildIdx 2
TaskResolveSymbolPathRef:   scope 0x298fb20 => 0x279b130
<-- TaskResolveSymbolPathRef::resolve
--> zsp::parser::TaskGetElemSymbolScope::visitField j
<-- zsp::parser::TaskGetElemSymbolScope::visitField j
<-- TaskResolveRefs::visitExprRefPathContext
--> TaskResolveRefs::visitExprRefPathStaticRooted
--> TaskResolveRefs::visitExprRefPathStatic size=1
--> TaskResolveRef::resolve (RefPath)
--> TaskResolveRef::visitExprId local
--> TaskResolveRootRef::resolve local
--> TaskResolveRootRef::visitSymbolExecScope
<-- TaskResolveRootRef::visitSymbolExecScope
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
--> TaskResolveRootRef::visitSymbolTypeScope id=local (Entry)
--> TaskResolveRootRef::visitSymbolScope id=local (Entry)
TaskResolveRootRef: imports: (nil)
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
TaskResolveRootRef: Failed to find symbol
<-- TaskResolveRootRef::visitSymbolScope
TaskResolveRootRef: TypeScope: m_ref=(nil) plist=(nil)
<-- TaskResolveRootRef::visitSymbolTypeScope (nil)
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
--> TaskResolveRootRef::visitSymbolTypeScope id=local (pss_top)
--> TaskResolveRootRef::visitSymbolScope id=local (pss_top)
TaskResolveRootRef: imports: (nil)
--> zsp::parser::TaskResolveEnumRef::resolve
<-- zsp::parser::TaskResolveEnumRef::resolve
TaskResolveRootRef: Failed to find symbol
<-- TaskResolveRootRef::visitSymbolScope
TaskResolveRootRef: TypeScope: m_ref=(nil) plist=(nil)
<-- TaskResolveRootRef::visitSymbolTypeScope (nil)
--> AstSymbolTableIterator::popScope 2
<-- AstSymbolTableIterator::popScope - sz=1
--> TaskResolveRootRef::visitSymbolScope id=local ()
TaskResolveRootRef: imports: (nil)
TaskResolveRootRef: Found symbol @ index 5
<-- TaskResolveRootRef::visitSymbolScope
<-- TaskResolveRootRef::resolve 0x27c94d0 (1)
<-- TaskResolveRef::visitExprId local (0x27c94d0)
<-- TaskResolveRef::resolve (RefPath) 0x27c94d0 (1)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 5
TaskResolveSymbolPathRef: Elem: ChildIdx 5
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x299afc0
<-- TaskResolveSymbolPathRef::resolve
--> zsp::parser::TaskIsPyRef::check
--> zsp::parser::TaskIsPyRef::visitPyImportStmt
<-- zsp::parser::TaskIsPyRef::visitPyImportStmt
<-- zsp::parser::TaskIsPyRef::check 1
<-- TaskResolveRefs::visitExprRefPathStatic
--> TaskResolveRefs::visitExprRefPathContext i
--> TaskResolveRef::resolve (RefPath)
--> TaskResolveRef::visitExprId i
--> TaskResolveRootRef::resolve i
--> TaskResolveRootRef::visitSymbolExecScope
<-- TaskResolveRootRef::visitSymbolExecScope
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
--> TaskResolveRootRef::visitSymbolTypeScope id=i (Entry)
--> TaskResolveRootRef::visitSymbolScope id=i (Entry)
TaskResolveRootRef: imports: (nil)
TaskResolveRootRef: Found symbol @ index 1
<-- TaskResolveRootRef::visitSymbolScope
TaskResolveRootRef: TypeScope: m_ref=0x28d6020 plist=(nil)
<-- TaskResolveRootRef::visitSymbolTypeScope 0x28d6020
<-- TaskResolveRootRef::resolve 0x28d6020 (3)
<-- TaskResolveRef::visitExprId i (0x28d6020)
<-- TaskResolveRef::resolve (RefPath) 0x28d6020 (3)
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 6
TaskResolveSymbolPathRef: Path: 0 0
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Elem: ChildIdx 6
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29813a0
TaskResolveSymbolPathRef: Elem: ChildIdx 0
TaskResolveSymbolPathRef:   scope 0x29813a0 => 0x298fb20
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x298fb20 => 0x27cbd00
<-- TaskResolveSymbolPathRef::resolve
--> zsp::parser::TaskGetElemSymbolScope::visitField i
<-- zsp::parser::TaskGetElemSymbolScope::visitField i
<-- TaskResolveRefs::visitExprRefPathContext
TaskResolveRefs: Root (static) reference has a Python component
<-- TaskResolveRefs::visitExprRefPathStaticRooted
--> AstSymbolTableIterator::popScope 4
<-- AstSymbolTableIterator::popScope - sz=3
<-- TaskResolveRefs::visitSymbolExecScope ""
--> AstSymbolTableIterator::popScope 3
<-- AstSymbolTableIterator::popScope - sz=2
<-- TaskResolveRefs::visitSymbolTypeScope Entry
--> AstSymbolTableIterator::popScope 2
<-- AstSymbolTableIterator::popScope - sz=1
<-- TaskResolveRefs::visitSymbolTypeScope pss_top
<-- TaskResolveRefs::resolve
--> zsp::fe::parser::TaskLinkBuiltinTypeElemFactories::link
--> zsp::fe::parser::TaskLinkBuiltinTypeElemFactories::findElem: addr_reg_pkg
zsp::fe::parser::TaskLinkBuiltinTypeElemFactories: Found
--> zsp::fe::parser::TaskLinkBuiltinTypeElemFactories::findElem: addr_claim_s
zsp::fe::parser::TaskLinkBuiltinTypeElemFactories: Found
<-- zsp::fe::parser::TaskLinkBuiltinTypeElemFactories::findElem: addr_claim_s 0x29caf90
<-- zsp::fe::parser::TaskLinkBuiltinTypeElemFactories::findElem: addr_reg_pkg 0x29caf90
zsp::fe::parser::TaskLinkBuiltinTypeElemFactories: Is a Symbol TypeScope
zsp::fe::parser::TaskLinkBuiltinTypeElemFactories: Set associated data for type addr_claim_s
--> zsp::fe::parser::TaskLinkBuiltinTypeElemFactories::findElem: addr_reg_pkg
zsp::fe::parser::TaskLinkBuiltinTypeElemFactories: Found
--> zsp::fe::parser::TaskLinkBuiltinTypeElemFactories::findElem: reg_c
zsp::fe::parser::TaskLinkBuiltinTypeElemFactories: Found
<-- zsp::fe::parser::TaskLinkBuiltinTypeElemFactories::findElem: reg_c 0x298fd40
<-- zsp::fe::parser::TaskLinkBuiltinTypeElemFactories::findElem: addr_reg_pkg 0x298fd40
zsp::fe::parser::TaskLinkBuiltinTypeElemFactories: Is a Symbol TypeScope
zsp::fe::parser::TaskLinkBuiltinTypeElemFactories: Set associated data for type reg_c
--> zsp::fe::parser::TaskLinkBuiltinTypeElemFactories::findElem: addr_reg_pkg
zsp::fe::parser::TaskLinkBuiltinTypeElemFactories: Found
--> zsp::fe::parser::TaskLinkBuiltinTypeElemFactories::findElem: reg_group_c
zsp::fe::parser::TaskLinkBuiltinTypeElemFactories: Found
<-- zsp::fe::parser::TaskLinkBuiltinTypeElemFactories::findElem: reg_group_c 0x2909340
<-- zsp::fe::parser::TaskLinkBuiltinTypeElemFactories::findElem: addr_reg_pkg 0x2909340
zsp::fe::parser::TaskLinkBuiltinTypeElemFactories: Is a Symbol TypeScope
zsp::fe::parser::TaskLinkBuiltinTypeElemFactories: Set associated data for type reg_group_c
<-- zsp::fe::parser::TaskLinkBuiltinTypeElemFactories::link
--> Ast2ArlContext::pushSymScopeStack
Ast2ArlContext: s=
<-- Ast2ArlContext::pushSymScopeStack
--> Ast2ArlContext::pushSymScope  -> 2
<-- Ast2ArlContext::pushSymScope
--> Ast2ArlBuilder::visitSymbolTypeScope pyobj
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope pyobj
--> Ast2ArlContext::pushSymScope pyobj -> 3
Ast2ArlContext: PUSH: m_type_s_idx=2
<-- Ast2ArlContext::pushSymScope
--> Ast2ArlContext::popSymScope pyobj -> 2
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope pyobj
--> Ast2ArlContext::pushSymScope addr_reg_pkg -> 3
<-- Ast2ArlContext::pushSymScope
--> Ast2ArlBuilder::visitSymbolTypeScope addr_space_base_c
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope addr_space_base_c
--> Ast2ArlContext::pushSymScope addr_space_base_c -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitComponent m_depth=0
TaskBuildDataType: Building Component Type: addr_reg_pkg::addr_space_base_c
--> TaskBuildDataType::buildType addr_reg_pkg::addr_space_base_c (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::addr_space_base_c (0)
<-- TaskBuildDataType::visitComponent
--> Ast2ArlContext::popSymScope addr_space_base_c -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope addr_space_base_c
--> Ast2ArlBuilder::visitSymbolTypeScope addr_trait_s
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope addr_trait_s
--> Ast2ArlContext::pushSymScope addr_trait_s -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::addr_trait_s
--> TaskBuildDataType::buildType addr_reg_pkg::addr_trait_s (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::addr_trait_s (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_trait_s -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope addr_trait_s
--> Ast2ArlBuilder::visitSymbolTypeScope empty_addr_trait_s
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope empty_addr_trait_s
--> Ast2ArlContext::pushSymScope empty_addr_trait_s -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::empty_addr_trait_s
--> TaskBuildDataType::buildType addr_reg_pkg::empty_addr_trait_s (0)
--> TaskBuildDataType::buildTypeFields 1
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x278a050
<-- TaskResolveSymbolPathRef::resolve
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::empty_addr_trait_s (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope empty_addr_trait_s -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope empty_addr_trait_s
--> Ast2ArlBuilder::visitSymbolTypeScope addr_handle_t
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::addr_handle_t
--> TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope addr_handle_t
--> Ast2ArlBuilder::visitSymbolTypeScope contiguous_addr_space_c
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope contiguous_addr_space_c
TaskBuildDataType: Type has parameters
TaskBuildDataType: Type is unspecialized (0 specializations)
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope contiguous_addr_space_c
--> Ast2ArlBuilder::visitSymbolTypeScope transparent_addr_space_c
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope transparent_addr_space_c
TaskBuildDataType: Type has parameters
TaskBuildDataType: Type is unspecialized (0 specializations)
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope transparent_addr_space_c
--> Ast2ArlBuilder::visitSymbolTypeScope addr_region_base_s
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope addr_region_base_s
--> Ast2ArlContext::pushSymScope addr_region_base_s -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::addr_region_base_s
--> TaskBuildDataType::buildType addr_reg_pkg::addr_region_base_s (0)
--> TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::visitField size 1
--> TaskBuildField::build
--> TaskBuildField::visitField size
--> Ast2ArlContext::pushSymScopeStack
Ast2ArlContext: s=
<-- Ast2ArlContext::pushSymScopeStack
--> zsp::fe::parser::TaskGetDataTypeAssocData::get
<-- zsp::fe::parser::TaskGetDataTypeAssocData::get (nil)
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> Ast2ArlContext::popSymStack
<-- Ast2ArlContext::popSymStack
<-- TaskBuildField::visitField
<-- TaskBuildField::build
<-- TaskBuildDataType::visitField size 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::addr_region_base_s (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_region_base_s -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope addr_region_base_s
--> Ast2ArlBuilder::visitSymbolTypeScope addr_region_s
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope addr_region_s
TaskBuildDataType: Type has parameters
TaskBuildDataType: Type is unspecialized (0 specializations)
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope addr_region_s
--> Ast2ArlBuilder::visitSymbolTypeScope transparent_addr_region_s
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope transparent_addr_region_s
TaskBuildDataType: Type has parameters
TaskBuildDataType: Type is unspecialized (0 specializations)
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope transparent_addr_region_s
--> Ast2ArlBuilder::visitSymbolTypeScope addr_claim_base_s
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope addr_claim_base_s
--> Ast2ArlContext::pushSymScope addr_claim_base_s -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::addr_claim_base_s
--> TaskBuildDataType::buildType addr_reg_pkg::addr_claim_base_s (0)
--> TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::visitField size 1
--> TaskBuildField::build
--> TaskBuildField::visitField size
--> Ast2ArlContext::pushSymScopeStack
Ast2ArlContext: s=
<-- Ast2ArlContext::pushSymScopeStack
--> zsp::fe::parser::TaskGetDataTypeAssocData::get
<-- zsp::fe::parser::TaskGetDataTypeAssocData::get (nil)
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> Ast2ArlContext::popSymStack
<-- Ast2ArlContext::popSymStack
<-- TaskBuildField::visitField
<-- TaskBuildField::build
<-- TaskBuildDataType::visitField size 1
--> TaskBuildDataType::visitField permanent 1
--> TaskBuildField::build
--> TaskBuildField::visitField permanent
--> Ast2ArlContext::pushSymScopeStack
Ast2ArlContext: s=
<-- Ast2ArlContext::pushSymScopeStack
--> zsp::fe::parser::TaskGetDataTypeAssocData::get
<-- zsp::fe::parser::TaskGetDataTypeAssocData::get (nil)
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeBool
<-- TaskBuildDataType::visitDataTypeBool
<-- TaskBuildDataType::build
--> Ast2ArlContext::popSymStack
<-- Ast2ArlContext::popSymStack
<-- TaskBuildField::visitField
<-- TaskBuildField::build
<-- TaskBuildDataType::visitField permanent 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
--> zsp::fe::parser::TaskBuildTypeConstraintss::visitConstraintBlock 
<-- zsp::fe::parser::TaskBuildTypeConstraintss::visitConstraintBlock 
--> zsp::fe::parser::TaskBuildTypeConstraintss::visitConstraintBlock 
<-- zsp::fe::parser::TaskBuildTypeConstraintss::visitConstraintBlock 
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::addr_claim_base_s (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_claim_base_s -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope addr_claim_base_s
--> Ast2ArlBuilder::visitSymbolTypeScope addr_claim_s
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope addr_claim_s
TaskBuildDataType: Type has parameters
TaskBuildDataType: Type is unspecialized (0 specializations)
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope addr_claim_s
--> Ast2ArlBuilder::visitSymbolTypeScope transparent_addr_claim_s
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope transparent_addr_claim_s
TaskBuildDataType: Type has parameters
TaskBuildDataType: Type is unspecialized (0 specializations)
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope transparent_addr_claim_s
--> Ast2ArlBuilder::visitSymbolEnumScope
--> TaskBuildEnumType::build
--> TaskBuildEnumType::visitEnumItem
<-- TaskBuildEnumType::visitEnumItem
--> TaskBuildEnumType::visitEnumItem
<-- TaskBuildEnumType::visitEnumItem
<-- TaskBuildEnumType::build
<-- Ast2ArlBuilder::visitSymbolEnumScope
--> Ast2ArlBuilder::visitSymbolTypeScope packed_s
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope packed_s
TaskBuildDataType: Type has parameters
TaskBuildDataType: Type is unspecialized (0 specializations)
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope packed_s
--> Ast2ArlBuilder::visitSymbolTypeScope sizeof_s
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope sizeof_s
TaskBuildDataType: Type has parameters
TaskBuildDataType: Type is unspecialized (0 specializations)
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope sizeof_s
--> Ast2ArlBuilder::visitSymbolTypeScope sized_addr_handle_s
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope sized_addr_handle_s
TaskBuildDataType: Type has parameters
TaskBuildDataType: Type is unspecialized (0 specializations)
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope sized_addr_handle_s
--> Ast2ArlBuilder::visitSymbolFunctionScope "make_handle_from_claim"
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::make_handle_from_claim
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::addr_handle_t
--> TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x29909c0)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_claim_base_s
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=9
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 9
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 9
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x29c4be0
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_claim_base_s
--> Ast2ArlContext::pushSymScope addr_claim_base_s -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::addr_claim_base_s
--> TaskBuildDataType::buildType addr_reg_pkg::addr_claim_base_s (0)
--> TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::visitField size 1
--> TaskBuildField::build
--> TaskBuildField::visitField size
--> Ast2ArlContext::pushSymScopeStack
Ast2ArlContext: s=
<-- Ast2ArlContext::pushSymScopeStack
--> zsp::fe::parser::TaskGetDataTypeAssocData::get
<-- zsp::fe::parser::TaskGetDataTypeAssocData::get (nil)
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> Ast2ArlContext::popSymStack
<-- Ast2ArlContext::popSymStack
<-- TaskBuildField::visitField
<-- TaskBuildField::build
<-- TaskBuildDataType::visitField size 1
--> TaskBuildDataType::visitField permanent 1
--> TaskBuildField::build
--> TaskBuildField::visitField permanent
--> Ast2ArlContext::pushSymScopeStack
Ast2ArlContext: s=
<-- Ast2ArlContext::pushSymScopeStack
--> zsp::fe::parser::TaskGetDataTypeAssocData::get
<-- zsp::fe::parser::TaskGetDataTypeAssocData::get (nil)
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeBool
<-- TaskBuildDataType::visitDataTypeBool
<-- TaskBuildDataType::build
--> Ast2ArlContext::popSymStack
<-- Ast2ArlContext::popSymStack
<-- TaskBuildField::visitField
<-- TaskBuildField::build
<-- TaskBuildDataType::visitField permanent 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
--> zsp::fe::parser::TaskBuildTypeConstraintss::visitConstraintBlock 
<-- zsp::fe::parser::TaskBuildTypeConstraintss::visitConstraintBlock 
--> zsp::fe::parser::TaskBuildTypeConstraintss::visitConstraintBlock 
<-- zsp::fe::parser::TaskBuildTypeConstraintss::visitConstraintBlock 
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::addr_claim_base_s (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_claim_base_s -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x29c82d0)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildExpr::build
--> TaskBuildExpr::expr
--> TaskBuildExpr::visitExprUnsignedNumber
<-- TaskBuildExpr::visitExprUnsignedNumber
<-- TaskBuildExpr::expr
<-- TaskBuildExpr::build 0x28dbd70
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::make_handle_from_claim
<-- Ast2ArlBuilder::visitSymbolFunctionScope make_handle_from_claim
--> Ast2ArlBuilder::visitSymbolFunctionScope "make_handle_from_handle"
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::make_handle_from_handle
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::addr_handle_t
--> TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x29caa10)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::addr_handle_t
--> TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x29bb040)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::make_handle_from_handle
<-- Ast2ArlBuilder::visitSymbolFunctionScope make_handle_from_handle
--> Ast2ArlBuilder::visitSymbolFunctionScope "addr_value"
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::addr_value
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::addr_handle_t
--> TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x28317e0)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::addr_value
<-- Ast2ArlBuilder::visitSymbolFunctionScope addr_value
--> Ast2ArlBuilder::visitSymbolFunctionScope "read8"
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read8
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::addr_handle_t
--> TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x299b620)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read8
<-- Ast2ArlBuilder::visitSymbolFunctionScope read8
--> Ast2ArlBuilder::visitSymbolFunctionScope "read16"
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read16
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::addr_handle_t
--> TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x2892800)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read16
<-- Ast2ArlBuilder::visitSymbolFunctionScope read16
--> Ast2ArlBuilder::visitSymbolFunctionScope "read32"
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read32
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::addr_handle_t
--> TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x2999cd0)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read32
<-- Ast2ArlBuilder::visitSymbolFunctionScope read32
--> Ast2ArlBuilder::visitSymbolFunctionScope "read64"
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read64
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::addr_handle_t
--> TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x2729960)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read64
<-- Ast2ArlBuilder::visitSymbolFunctionScope read64
--> Ast2ArlBuilder::visitSymbolFunctionScope "write8"
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write8
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::addr_handle_t
--> TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x299ac00)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write8
<-- Ast2ArlBuilder::visitSymbolFunctionScope write8
--> Ast2ArlBuilder::visitSymbolFunctionScope "write16"
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write16
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::addr_handle_t
--> TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x29c9e80)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write16
<-- Ast2ArlBuilder::visitSymbolFunctionScope write16
--> Ast2ArlBuilder::visitSymbolFunctionScope "write32"
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write32
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::addr_handle_t
--> TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x2720f50)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write32
<-- Ast2ArlBuilder::visitSymbolFunctionScope write32
--> Ast2ArlBuilder::visitSymbolFunctionScope "write64"
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write64
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::addr_handle_t
--> TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x26d37b0)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write64
<-- Ast2ArlBuilder::visitSymbolFunctionScope write64
--> Ast2ArlBuilder::visitSymbolEnumScope
--> TaskBuildEnumType::build
--> TaskBuildEnumType::visitEnumItem
<-- TaskBuildEnumType::visitEnumItem
--> TaskBuildEnumType::visitEnumItem
<-- TaskBuildEnumType::visitEnumItem
--> TaskBuildEnumType::visitEnumItem
<-- TaskBuildEnumType::visitEnumItem
<-- TaskBuildEnumType::build
<-- Ast2ArlBuilder::visitSymbolEnumScope
--> Ast2ArlBuilder::visitSymbolTypeScope reg_c
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope reg_c
TaskBuildDataType: Type has parameters
TaskBuildDataType: Type is unspecialized (0 specializations)
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope reg_c
--> Ast2ArlBuilder::visitSymbolTypeScope reg_group_c
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope reg_group_c
--> Ast2ArlContext::pushSymScope reg_group_c -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitComponent m_depth=0
TaskBuildDataType: Building Component Type: addr_reg_pkg::reg_group_c
--> TaskBuildDataType::buildType addr_reg_pkg::reg_group_c (0)
--> TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::reg_group_c::get_offset_of_instance
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeString
<-- TaskBuildDataType::visitDataTypeString
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::reg_group_c::get_offset_of_instance
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::reg_group_c::get_offset_of_instance_array
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeString
<-- TaskBuildDataType::visitDataTypeString
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::reg_group_c::get_offset_of_instance_array
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::reg_group_c::set_handle
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::reg_group_c::addr_handle_t
--> TaskBuildDataType::buildType addr_reg_pkg::reg_group_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::reg_group_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x28e1610)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::reg_group_c::set_handle
<-- TaskBuildDataType::visitSymbolFunctionScope
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::reg_group_c (0)
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::reg_group_c::get_offset_of_instance
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeString
<-- TaskBuildDataType::visitDataTypeString
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::reg_group_c::get_offset_of_instance
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::reg_group_c::get_offset_of_instance_array
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeString
<-- TaskBuildDataType::visitDataTypeString
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::reg_group_c::get_offset_of_instance_array
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::reg_group_c::set_handle
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: addr_reg_pkg::reg_group_c::addr_handle_t
--> TaskBuildDataType::buildType addr_reg_pkg::reg_group_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType addr_reg_pkg::reg_group_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x282e660)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::reg_group_c::set_handle
<-- TaskBuildDataType::visitSymbolFunctionScope
<-- TaskBuildDataType::visitComponent
--> Ast2ArlContext::popSymScope reg_group_c -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope reg_group_c
--> Ast2ArlContext::popSymScope addr_reg_pkg -> 2
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
--> Ast2ArlContext::pushSymScope executor_pkg -> 3
<-- Ast2ArlContext::pushSymScope
--> Ast2ArlBuilder::visitSymbolTypeScope executor_trait_s
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope executor_trait_s
--> Ast2ArlContext::pushSymScope executor_trait_s -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_trait_s
--> TaskBuildDataType::buildType executor_pkg::executor_trait_s (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_trait_s (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope executor_trait_s -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope executor_trait_s
--> Ast2ArlBuilder::visitSymbolTypeScope empty_executor_trait_s
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope empty_executor_trait_s
--> Ast2ArlContext::pushSymScope empty_executor_trait_s -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::empty_executor_trait_s
--> TaskBuildDataType::buildType executor_pkg::empty_executor_trait_s (0)
--> TaskBuildDataType::buildTypeFields 1
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 2
TaskResolveSymbolPathRef: Path: 0 0
TaskResolveSymbolPathRef: Elem: ChildIdx 2
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x28a8558
TaskResolveSymbolPathRef: Elem: ChildIdx 0
TaskResolveSymbolPathRef:   scope 0x28a8558 => 0x29a4150
<-- TaskResolveSymbolPathRef::resolve
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::empty_executor_trait_s (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope empty_executor_trait_s -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope empty_executor_trait_s
--> Ast2ArlBuilder::visitSymbolTypeScope executor_base_c
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope executor_base_c
--> Ast2ArlContext::pushSymScope executor_base_c -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitComponent m_depth=0
TaskBuildDataType: Building Component Type: executor_pkg::executor_base_c
--> TaskBuildDataType::buildType executor_pkg::executor_base_c (0)
--> TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read8
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x298f770)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read8
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read16
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x2829ef0)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read16
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read32
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x2729e00)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read32
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read64
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x29ae380)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read64
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write8
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x27fef60)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write8
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write16
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x28e24d0)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write16
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write32
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x2895660)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write32
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write64
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x271f420)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write64
<-- TaskBuildDataType::visitSymbolFunctionScope
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c (0)
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read8
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x28dd500)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read8
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read16
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x28c79a0)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read16
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read32
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x28612c0)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read32
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read64
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x29a0190)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read64
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write8
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x29a1ac0)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write8
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write16
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x2990f30)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write16
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write32
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x28b5be0)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write32
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write64
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x294fbf0)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write64
<-- TaskBuildDataType::visitSymbolFunctionScope
<-- TaskBuildDataType::visitComponent
--> Ast2ArlContext::popSymScope executor_base_c -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope executor_base_c
--> Ast2ArlBuilder::visitSymbolTypeScope executor_c
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope executor_c
TaskBuildDataType: Type has parameters
TaskBuildDataType: Type is unspecialized (0 specializations)
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope executor_c
--> Ast2ArlBuilder::visitSymbolTypeScope executor_group_c
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope executor_group_c
TaskBuildDataType: Type has parameters
TaskBuildDataType: Type is unspecialized (0 specializations)
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope executor_group_c
--> Ast2ArlBuilder::visitSymbolTypeScope executor_claim_s
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope executor_claim_s
TaskBuildDataType: Type has parameters
TaskBuildDataType: Type is unspecialized (0 specializations)
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope executor_claim_s
--> Ast2ArlBuilder::visitSymbolFunctionScope "executor"
--> zsp::fe::parser::TaskBuildDataTypeFunction::build executor_pkg::executor
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: executor_base_c
TaskBuildDataType:   Elem: kind=0 idx=2
TaskBuildDataType:   Elem: kind=0 idx=2
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 2
TaskResolveSymbolPathRef: Path: 0 2
TaskResolveSymbolPathRef: Elem: ChildIdx 2
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x28a8558
TaskResolveSymbolPathRef: Elem: ChildIdx 2
TaskResolveSymbolPathRef:   scope 0x28a8558 => 0x2830b90
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope executor_base_c
--> Ast2ArlContext::pushSymScope executor_base_c -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitComponent m_depth=0
TaskBuildDataType: Building Component Type: executor_pkg::executor_base_c
--> TaskBuildDataType::buildType executor_pkg::executor_base_c (0)
--> TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read8
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x28a7ab0)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read8
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read16
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x29c4910)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read16
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read32
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x2715660)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read32
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read64
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x283beb0)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read64
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write8
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x2826900)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write8
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write16
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x29c1960)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write16
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write32
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x282e520)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write32
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write64
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x2729110)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write64
<-- TaskBuildDataType::visitSymbolFunctionScope
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c (0)
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read8
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x2877c00)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read8
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read16
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x2816180)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read16
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read32
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x281a860)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read32
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read64
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x29a6270)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::read64
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write8
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x2727cb0)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write8
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write16
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x28c7ab0)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write16
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write32
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x2822e90)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write32
<-- TaskBuildDataType::visitSymbolFunctionScope
--> TaskBuildDataType::visitSymbolFunctionScope
--> zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write64
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeUserDefined
TaskBuildDataType:   TypeId Elem: addr_handle_t
TaskBuildDataType:   Elem: kind=0 idx=1
TaskBuildDataType:   Elem: kind=0 idx=3
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Path: 0 3
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29cc668
TaskResolveSymbolPathRef: Elem: ChildIdx 3
TaskResolveSymbolPathRef:   scope 0x29cc668 => 0x2783a30
<-- TaskResolveSymbolPathRef::resolve
--> TaskResolveSymbolPathRef::visitSymbolTypeScope
<-- TaskResolveSymbolPathRef::visitSymbolTypeScope
TaskBuildDataType: kind=0
--> TaskBuildDataType::visitSymbolTypeScope addr_handle_t
--> Ast2ArlContext::pushSymScope addr_handle_t -> 5
Ast2ArlContext: PUSH: m_type_s_idx=4
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitStruct (nil)
TaskBuildDataType: Fullname: executor_pkg::executor_base_c::addr_handle_t
--> TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
--> TaskBuildDataType::buildTypeFields 1
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType executor_pkg::executor_base_c::addr_handle_t (0)
<-- TaskBuildDataType::visitStruct
--> Ast2ArlContext::popSymScope addr_handle_t -> 4
Ast2ArlContext: POP: m_type_s_idx=3
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x29bedb0)
<-- TaskBuildDataType::build
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
--> zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- zsp::parser::TaskEvalExpr::visitExprUnsignedNumber
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build addr_reg_pkg::write64
<-- TaskBuildDataType::visitSymbolFunctionScope
<-- TaskBuildDataType::visitComponent
--> Ast2ArlContext::popSymScope executor_base_c -> 3
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitDataTypeUserDefined (0x2993f30)
<-- TaskBuildDataType::build
zsp::fe::parser::TaskBuildDataTypeFunction: Import function
<-- zsp::fe::parser::TaskBuildDataTypeFunction::build executor_pkg::executor
<-- Ast2ArlBuilder::visitSymbolFunctionScope executor
--> Ast2ArlContext::popSymScope executor_pkg -> 2
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
--> Ast2ArlBuilder::visitSymbolTypeScope packed
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope packed
TaskBuildDataType: Type has parameters
TaskBuildDataType: Type is unspecialized (0 specializations)
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope packed
--> Ast2ArlContext::pushSymScope std_pkg -> 3
<-- Ast2ArlContext::pushSymScope
--> Ast2ArlContext::popSymScope std_pkg -> 2
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
--> Ast2ArlBuilder::visitSymbolTypeScope pss_top
Ast2ArlBuilder: Need to build type
--> TaskBuildDataType::build
--> TaskBuildDataType::visitSymbolTypeScope pss_top
--> Ast2ArlContext::pushSymScope pss_top -> 3
Ast2ArlContext: PUSH: m_type_s_idx=2
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitComponent m_depth=0
TaskBuildDataType: Building Component Type: pss_top
--> TaskBuildDataType::buildType pss_top (0)
--> TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::visitSymbolTypeScope Entry
--> Ast2ArlContext::pushSymScope Entry -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitAction Entry
<-- TaskBuildDataType::visitAction Entry
--> Ast2ArlContext::popSymScope Entry -> 3
Ast2ArlContext: POP: m_type_s_idx=2
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
--> TaskBuildTypeExecs::visitSymbolTypeScope
TaskBuildTypeExecs: Skip recursion
<-- TaskBuildTypeExecs::visitSymbolTypeScope
--> TaskBuildTypeExecs::visitSymbolTypeScope
TaskBuildTypeExecs: Skip recursion
<-- TaskBuildTypeExecs::visitSymbolTypeScope
--> TaskBuildTypeExecs::visitSymbolTypeScope
TaskBuildTypeExecs: Skip recursion
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType pss_top (0)
--> TaskBuildDataType::visitSymbolTypeScope Entry
--> Ast2ArlContext::pushSymScope Entry -> 4
Ast2ArlContext: PUSH: m_type_s_idx=3
<-- Ast2ArlContext::pushSymScope
--> TaskBuildDataType::visitAction Entry
TaskBuildDataType: Building Action Type: pss_top::Entry
--> TaskBuildDataType::buildType pss_top::Entry (0)
--> TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::visitFieldCompRef
--> TaskBuildField::build
--> TaskBuildField::visitFieldCompRef
<-- TaskBuildField::visitFieldCompRef
<-- TaskBuildField::build
<-- TaskBuildDataType::visitFieldCompRef
--> TaskBuildDataType::visitField i 1
--> TaskBuildField::build
--> TaskBuildField::visitField i
--> Ast2ArlContext::pushSymScopeStack
Ast2ArlContext: s=
<-- Ast2ArlContext::pushSymScopeStack
--> zsp::fe::parser::TaskGetDataTypeAssocData::get
<-- zsp::fe::parser::TaskGetDataTypeAssocData::get (nil)
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> Ast2ArlContext::popSymStack
<-- Ast2ArlContext::popSymStack
<-- TaskBuildField::visitField
<-- TaskBuildField::build
<-- TaskBuildDataType::visitField i 1
--> TaskBuildDataType::visitField j 1
--> TaskBuildField::build
--> TaskBuildField::visitField j
--> Ast2ArlContext::pushSymScopeStack
Ast2ArlContext: s=
<-- Ast2ArlContext::pushSymScopeStack
--> zsp::fe::parser::TaskGetDataTypeAssocData::get
<-- zsp::fe::parser::TaskGetDataTypeAssocData::get (nil)
--> TaskBuildDataType::build
--> TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::visitDataTypeInt
<-- TaskBuildDataType::build
--> Ast2ArlContext::popSymStack
<-- Ast2ArlContext::popSymStack
<-- TaskBuildField::visitField
<-- TaskBuildField::build
<-- TaskBuildDataType::visitField j 1
--> TaskBuildDataType::visitSymbolExecScope (depth=1)
TaskBuildDataType: TODO: visitSymbolExecScope
<-- TaskBuildDataType::visitSymbolExecScope (depth=1)
<-- TaskBuildDataType::buildTypeFields 1
--> TaskBuildDataType::buildTypeConstraints
<-- TaskBuildDataType::buildTypeConstraints
--> TaskBuildTypeExecs::build
--> TaskBuildTypeExecs::visitSymbolTypeScope
--> TaskBuildTypeExecs::visitSymbolExecScope kind=8 target_kind=0 size=2
<-- TaskBuildTypeExecs::visitSymbolExecScope -- not target kind
--> TaskBuildTypeExecs::visitSymbolExecScope kind=8 target_kind=7 size=2
<-- TaskBuildTypeExecs::visitSymbolExecScope -- not target kind
--> TaskBuildTypeExecs::visitSymbolExecScope kind=8 target_kind=8 size=2
--> TaskBuildTypeExecStmt::build
--> TaskBuildTypeExecStmt::visitProceduralStmtAssignment
--> TaskBuildExpr::build
--> TaskBuildExpr::expr
--> TaskBuildExpr::visitExprRefPathContext baseExpr=(nil)
TaskBuildExpr: it: kind=0 idx=6
TaskBuildExpr: it: kind=0 idx=0
TaskBuildExpr: it: kind=0 idx=1
TaskBuildExpr: HierId (0x283c700) .size=1
TaskBuildExpr: TypeScope: Entry
TaskBuildExpr: Path size=3 ; scope depth=4
TaskBuildExpr: Scope:  ; ii=0 idx=6
TaskBuildExpr: Scope: pss_top ; ii=1 idx=0
TaskBuildExpr: Found type scope @ 1 (Entry)
TaskBuildExpr: Scope: Entry ; ii=2 idx=1
TaskBuildExpr: type_scope_idx=2
TaskBuildExpr: type_scope_idx=2 (PathSize-1)=2
TaskBuildExpr: Type-context reference
TaskBuildExpr: Add path elem 1
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 6
TaskResolveSymbolPathRef: Path: 0 0
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Elem: ChildIdx 6
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29813a0
TaskResolveSymbolPathRef: Elem: ChildIdx 0
TaskResolveSymbolPathRef:   scope 0x29813a0 => 0x298fb20
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x298fb20 => 0x27cbd00
<-- TaskResolveSymbolPathRef::resolve
TaskBuildExpr: Path[0]: -1
<-- TaskBuildExpr::visitExprRefPathContext 0x288ea00
<-- TaskBuildExpr::expr
<-- TaskBuildExpr::build 0x288ea00
--> TaskBuildExpr::build
--> TaskBuildExpr::expr
--> TaskBuildExpr::visitExprUnsignedNumber
<-- TaskBuildExpr::visitExprUnsignedNumber
<-- TaskBuildExpr::expr
<-- TaskBuildExpr::build 0x2840540
<-- TaskBuildTypeExecStmt::visitProceduralStmtAssignment
<-- TaskBuildTypeExecStmt::build
--> TaskBuildTypeExecStmt::build
--> TaskBuildTypeExecStmt::visitProceduralStmtAssignment
--> TaskBuildExpr::build
--> TaskBuildExpr::expr
--> TaskBuildExpr::visitExprRefPathContext baseExpr=(nil)
TaskBuildExpr: it: kind=0 idx=6
TaskBuildExpr: it: kind=0 idx=0
TaskBuildExpr: it: kind=0 idx=2
TaskBuildExpr: HierId (0x2878ad0) .size=1
TaskBuildExpr: TypeScope: Entry
TaskBuildExpr: Path size=3 ; scope depth=4
TaskBuildExpr: Scope:  ; ii=0 idx=6
TaskBuildExpr: Scope: pss_top ; ii=1 idx=0
TaskBuildExpr: Found type scope @ 1 (Entry)
TaskBuildExpr: Scope: Entry ; ii=2 idx=2
TaskBuildExpr: type_scope_idx=2
TaskBuildExpr: type_scope_idx=2 (PathSize-1)=2
TaskBuildExpr: Type-context reference
TaskBuildExpr: Add path elem 2
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 6
TaskResolveSymbolPathRef: Path: 0 0
TaskResolveSymbolPathRef: Path: 0 2
TaskResolveSymbolPathRef: Elem: ChildIdx 6
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29813a0
TaskResolveSymbolPathRef: Elem: ChildIdx 0
TaskResolveSymbolPathRef:   scope 0x29813a0 => 0x298fb20
TaskResolveSymbolPathRef: Elem: ChildIdx 2
TaskResolveSymbolPathRef:   scope 0x298fb20 => 0x279b130
<-- TaskResolveSymbolPathRef::resolve
TaskBuildExpr: Path[0]: -1
<-- TaskBuildExpr::visitExprRefPathContext 0x274e520
<-- TaskBuildExpr::expr
<-- TaskBuildExpr::build 0x274e520
--> TaskBuildExpr::build
--> TaskBuildExpr::expr
--> TaskBuildExpr::visitExprRefPathStaticRooted
--> TaskBuildExpr::visitExprRefPathStatic
TaskBuildExpr: Path involves a Python-type reference
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 5
TaskResolveSymbolPathRef: Elem: ChildIdx 5
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x299afc0
<-- TaskResolveSymbolPathRef::resolve
--> TaskBuildExpr::visitPyImportStmt
TaskBuildExpr: Searching for python import "local"
<-- TaskBuildExpr::visitPyImportStmt
<-- TaskBuildExpr::visitExprRefPathStatic
TaskBuildExpr: Push BaseExpr 0x27a4280
TaskBuildExpr: BaseExpr 0x27a4280
--> TaskBuildExpr::visitExprMemberPathElem
TaskBuildExpr: Method call
TaskBuildExpr: Create Python method call
--> TaskBuildExpr::visitExprRefPathContext baseExpr=(nil)
TaskBuildExpr: it: kind=0 idx=6
TaskBuildExpr: it: kind=0 idx=0
TaskBuildExpr: it: kind=0 idx=1
TaskBuildExpr: HierId (0x28219a0) .size=1
TaskBuildExpr: TypeScope: Entry
TaskBuildExpr: Path size=3 ; scope depth=4
TaskBuildExpr: Scope:  ; ii=0 idx=6
TaskBuildExpr: Scope: pss_top ; ii=1 idx=0
TaskBuildExpr: Found type scope @ 1 (Entry)
TaskBuildExpr: Scope: Entry ; ii=2 idx=1
TaskBuildExpr: type_scope_idx=2
TaskBuildExpr: type_scope_idx=2 (PathSize-1)=2
TaskBuildExpr: Type-context reference
TaskBuildExpr: Add path elem 1
--> TaskResolveSymbolPathRef::resolve root=0x29dcf18
TaskResolveSymbolPathRef: Path: 0 6
TaskResolveSymbolPathRef: Path: 0 0
TaskResolveSymbolPathRef: Path: 0 1
TaskResolveSymbolPathRef: Elem: ChildIdx 6
TaskResolveSymbolPathRef:   scope 0x29dcf18 => 0x29813a0
TaskResolveSymbolPathRef: Elem: ChildIdx 0
TaskResolveSymbolPathRef:   scope 0x29813a0 => 0x298fb20
TaskResolveSymbolPathRef: Elem: ChildIdx 1
TaskResolveSymbolPathRef:   scope 0x298fb20 => 0x27cbd00
<-- TaskResolveSymbolPathRef::resolve
TaskBuildExpr: Path[0]: -1
<-- TaskBuildExpr::visitExprRefPathContext 0x29ca830
<-- TaskBuildExpr::visitExprMemberPathElem
TaskBuildExpr: Post Pop BaseExpr expr=0x29b2ec0
TaskBuildExpr: root=0x2875598 leaf=0x271ac50
<-- TaskBuildExpr::visitExprRefPathStaticRooted
<-- TaskBuildExpr::expr
<-- TaskBuildExpr::build 0x29b2ec0
<-- TaskBuildTypeExecStmt::visitProceduralStmtAssignment
<-- TaskBuildTypeExecStmt::build
<-- TaskBuildTypeExecs::visitSymbolExecScope
<-- TaskBuildTypeExecs::visitSymbolTypeScope
<-- TaskBuildTypeExecs::build
<-- TaskBuildDataType::buildType pss_top::Entry (0)
<-- TaskBuildDataType::visitAction Entry
--> Ast2ArlContext::popSymScope Entry -> 3
Ast2ArlContext: POP: m_type_s_idx=2
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::visitComponent
--> Ast2ArlContext::popSymScope pss_top -> 2
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
<-- TaskBuildDataType::visitSymbolTypeScope
<-- TaskBuildDataType::build
<-- Ast2ArlBuilder::visitSymbolTypeScope pss_top
--> Ast2ArlContext::popSymScope  -> 1
Ast2ArlContext: POP: m_type_s_idx=-1
<-- Ast2ArlContext::popSymScope
--> Ast2ArlContext::popSymStack
<-- Ast2ArlContext::popSymStack
--> zsp::arl::eval::EvalContextIncrElab::buildCompTree
zsp::arl::eval::EvalContextIncrElab: Process Function addr_reg_pkg::make_handle_from_claim
zsp::arl::eval::EvalContextIncrElab: Process Function addr_reg_pkg::make_handle_from_handle
zsp::arl::eval::EvalContextIncrElab: Process Function addr_reg_pkg::addr_value
zsp::arl::eval::EvalContextIncrElab: Process Function addr_reg_pkg::read8
zsp::arl::eval::EvalContextIncrElab: Process Function addr_reg_pkg::read16
zsp::arl::eval::EvalContextIncrElab: Process Function addr_reg_pkg::read32
zsp::arl::eval::EvalContextIncrElab: Process Function addr_reg_pkg::read64
zsp::arl::eval::EvalContextIncrElab: Process Function addr_reg_pkg::write8
zsp::arl::eval::EvalContextIncrElab: Process Function addr_reg_pkg::write16
zsp::arl::eval::EvalContextIncrElab: Process Function addr_reg_pkg::write32
zsp::arl::eval::EvalContextIncrElab: Process Function addr_reg_pkg::write64
zsp::arl::eval::EvalContextIncrElab: Process Function addr_reg_pkg::reg_group_c::get_offset_of_instance
zsp::arl::eval::EvalContextIncrElab: Process Function addr_reg_pkg::reg_group_c::get_offset_of_instance_array
zsp::arl::eval::EvalContextIncrElab: Process Function addr_reg_pkg::reg_group_c::set_handle
zsp::arl::eval::EvalContextIncrElab: Process Function executor_pkg::executor
<-- zsp::arl::eval::EvalContextIncrElab::buildCompTree 0 15
--> zsp::arl::eval::EvalContextIncrElab::[0] eval
--> zsp::arl::eval::EvalContextIncrElab::initPython
zsp::arl::eval::EvalContextIncrElab: Module local has already been loaded
<-- zsp::arl::eval::EvalContextIncrElab::initPython
--> zsp::arl::eval::EvalContextIncrElab::haveError
zsp::arl::eval::EvalContextIncrElab: Get top-level
<-- zsp::arl::eval::EvalContextIncrElab::haveError 0
--> ModelFieldComponentRoot::enterComponentScope level=0 (0) pss_top
<-- ModelFieldComponentRoot::enterComponentScope pss_top
--> ModelFieldComponentRoot::leaveComponentScope 0 (-1)
<-- ModelFieldComponentRoot::leaveComponentScope
--> zsp::arl::eval::TaskEvalComponentExecInit::eval
--> zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a9b70
<-- zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a9b70
--> zsp::arl::eval::TaskEvalComponentExecInit::visitDataTypeComponent
zsp::arl::eval::TaskEvalComponentExecInit: No init-down execs to evaluate
zsp::arl::eval::TaskEvalComponentExecInit: No init-up execs to evaluate
<-- zsp::arl::eval::TaskEvalComponentExecInit::visitDataTypeComponent
--> zsp::arl::eval::EvalContextIncrElab::popEval 0x7ffce80a9b70 sz=1
zsp::arl::eval::EvalContextIncrElab: NOT hasResult
<-- zsp::arl::eval::EvalContextIncrElab::popEval
<-- zsp::arl::eval::TaskEvalComponentExecInit::eval
--> zsp::arl::eval::TaskElaborateRegGroupTypes::elaborate
--> zsp::arl::eval::TaskElaborateRegGroupTypes::visitModelFieldComponent
<-- zsp::arl::eval::TaskElaborateRegGroupTypes::visitModelFieldComponent
<-- zsp::arl::eval::TaskElaborateRegGroupTypes::elaborate
--> zsp::arl::eval::EvalTypeActionIncrElab::eval
--> zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a9cf0
<-- zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a9cf0
zsp::arl::eval::EvalTypeActionIncrElab:   0x27d72b8
zsp::arl::eval::EvalTypeActionIncrElab: FieldVal: 0x281bdb8
Component is non-null
Function: addr_reg_pkg::make_handle_from_claim
Function: addr_reg_pkg::make_handle_from_handle
Function: addr_reg_pkg::addr_value
Function: addr_reg_pkg::read8
Function: addr_reg_pkg::read16
Function: addr_reg_pkg::read32
Function: addr_reg_pkg::read64
Function: addr_reg_pkg::write8
Function: addr_reg_pkg::write16
Function: addr_reg_pkg::write32
Function: addr_reg_pkg::write64
Function: addr_reg_pkg::reg_group_c::get_offset_of_instance
Function: addr_reg_pkg::reg_group_c::get_offset_of_instance_array
Function: addr_reg_pkg::reg_group_c::set_handle
Function: executor_pkg::executor
enterThread
Hello from DOIT
--> EvalTypeExecList::[-1] eval size=0 idx=0
--> zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a9a90
<-- zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a9a90
--> zsp::arl::eval::EvalContextIncrElab::popEval 0x7ffce80a9a90 sz=2
--> zsp::arl::eval::EvalContextIncrElab::setResult sz=1
<-- zsp::arl::eval::EvalContextIncrElab::setResult
<-- zsp::arl::eval::EvalContextIncrElab::popEval
<-- EvalTypeExecList::[1] eval (0)
--> EvalTypeExecList::[-1] eval size=1 idx=0
--> zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a9b30
<-- zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a9b30
--> EvalTypeExecList::visitTypeExecProc
--> EvalTypeProcStmtScope::[-1] eval
--> zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a98e0
<-- zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a98e0
--> EvalTypeProcStmt::[-1] eval
--> zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a9820
<-- zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a9820
--> EvalTypeProcStmt::visitTypeProcStmtAssign idx=0
--> EvalTypeExpr::[-1] eval (initial=1)
--> zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a9630
<-- zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a9630
--> EvalTypeExpr::visitTypeExprVal
<-- EvalTypeExpr::visitTypeExprVal
--> zsp::arl::eval::EvalContextIncrElab::popEval 0x7ffce80a9630 sz=5
--> zsp::arl::eval::EvalContextIncrElab::setResult sz=4
<-- zsp::arl::eval::EvalContextIncrElab::setResult
<-- zsp::arl::eval::EvalContextIncrElab::popEval
<-- EvalTypeExpr::[4] eval 0
EvalTypeProcStmt: pre-GetLval: haveResult: 1
zsp::arl::eval::EvalTypeActionIncrElab: getValProvider
--> zsp::arl::eval::TaskEvalGetLval::eval
--> zsp::arl::eval::TaskEvalGetLval::visitTypeExprFieldRef
zsp::arl::eval::TaskEvalGetLval: path.size=1 path_idx=0 index=1
zsp::arl::eval::TaskEvalGetLval: vp=0x7ffce80a9d40
<-- zsp::arl::eval::TaskEvalGetLval::visitTypeExprFieldRef
<-- zsp::arl::eval::TaskEvalGetLval::eval 0x7ffce80a9480
EvalTypeProcStmt: post-GetLval: haveResult: 1
TODO: Check of result kind
EvalTypeProcStmt: RHS(int): init=1620390176
EvalTypeProcStmt: RHS(int): 2 (lhs=2)
EvalTypeProcStmt: Ready
EvalTypeProcStmt: setVoidResult
EvalTypeProcStmt: haveResult: 1
<-- EvalTypeProcStmt::visitTypeProcStmtAssign
EvalTypeProcStmt: popEval
--> zsp::arl::eval::EvalContextIncrElab::popEval 0x7ffce80a9820 sz=4
--> zsp::arl::eval::EvalContextIncrElab::setResult sz=3
<-- zsp::arl::eval::EvalContextIncrElab::setResult
<-- zsp::arl::eval::EvalContextIncrElab::popEval
<-- EvalTypeProcStmt::[3] eval 0
--> EvalTypeProcStmt::[-1] eval
--> zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a9820
<-- zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a9820
--> EvalTypeProcStmt::visitTypeProcStmtAssign idx=0
--> EvalTypeExpr::[-1] eval (initial=1)
--> zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a9630
<-- zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a9630
--> EvalTypeExpr::visitTypeExprPythonMethodCall
--> EvalTypeExpr::[-1] eval (initial=1)
--> zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a9300
<-- zsp::arl::eval::EvalContextIncrElab::pushEval 0x7ffce80a9300
--> EvalTypeExpr::visitTypeExprPyImportRef
<-- EvalTypeExpr::visitTypeExprPyImportRef
--> zsp::arl::eval::EvalContextIncrElab::popEval 0x7ffce80a9300 sz=6
--> zsp::arl::eval::EvalContextIncrElab::setResult sz=5
<-- zsp::arl::eval::EvalContextIncrElab::setResult
<-- zsp::arl::eval::EvalContextIncrElab::popEval
<-- EvalTypeExpr::[5] eval 0
EvalTypeExpr: obj=0x7f8a67ce4b80
EvalTypeExpr: ret=0x7f8a69618540
<-- EvalTypeExpr::visitTypeExprPythonMethodCall
--> zsp::arl::eval::EvalContextIncrElab::popEval 0x7ffce80a9630 sz=5
--> zsp::arl::eval::EvalContextIncrElab::setResult sz=4
<-- zsp::arl::eval::EvalContextIncrElab::setResult
<-- zsp::arl::eval::EvalContextIncrElab::popEval
<-- EvalTypeExpr::[4] eval 0
EvalTypeProcStmt: pre-GetLval: haveResult: 1
zsp::arl::eval::EvalTypeActionIncrElab: getValProvider
--> zsp::arl::eval::TaskEvalGetLval::eval
--> zsp::arl::eval::TaskEvalGetLval::visitTypeExprFieldRef
zsp::arl::eval::TaskEvalGetLval: path.size=1 path_idx=0 index=2
zsp::arl::eval::TaskEvalGetLval: vp=0x7ffce80a9d40
<-- zsp::arl::eval::TaskEvalGetLval::visitTypeExprFieldRef
<-- zsp::arl::eval::TaskEvalGetLval::eval 0x7ffce80a9480
EvalTypeProcStmt: post-GetLval: haveResult: 1
TODO: Check of result kind
EvalTypeProcStmt: RHS(int): init=32650
EvalTypeProcStmt: RHS(int): 0 (lhs=0)
EvalTypeProcStmt: Ready
EvalTypeProcStmt: setVoidResult
EvalTypeProcStmt: haveResult: 1
<-- EvalTypeProcStmt::visitTypeProcStmtAssign
EvalTypeProcStmt: popEval
--> zsp::arl::eval::EvalContextIncrElab::popEval 0x7ffce80a9820 sz=4
--> zsp::arl::eval::EvalContextIncrElab::setResult sz=3
<-- zsp::arl::eval::EvalContextIncrElab::setResult
<-- zsp::arl::eval::EvalContextIncrElab::popEval
<-- EvalTypeProcStmt::[3] eval 0
EvalTypeProcStmtScope: popEval
--> zsp::arl::eval::EvalContextIncrElab::popEval 0x7ffce80a98e0 sz=3
--> zsp::arl::eval::EvalContextIncrElab::setResult sz=2
<-- zsp::arl::eval::EvalContextIncrElab::setResult
<-- zsp::arl::eval::EvalContextIncrElab::popEval
<-- EvalTypeProcStmtScope::[2] eval 0
<-- EvalTypeExecList::visitTypeExecProc
--> zsp::arl::eval::EvalContextIncrElab::popEval 0x7ffce80a9b30 sz=2
--> zsp::arl::eval::EvalContextIncrElab::setResult sz=1
<-- zsp::arl::eval::EvalContextIncrElab::setResult
<-- zsp::arl::eval::EvalContextIncrElab::popEval
<-- EvalTypeExecList::[1] eval (0)
--> zsp::arl::eval::EvalContextIncrElab::popEval 0x7ffce80a9cf0 sz=1
--> zsp::arl::eval::EvalContextIncrElab::setResult sz=0
<-- zsp::arl::eval::EvalContextIncrElab::setResult
<-- zsp::arl::eval::EvalContextIncrElab::popEval
<-- zsp::arl::eval::EvalTypeActionIncrElab::eval 0
zsp::arl::eval::EvalContextIncrElab: Flush
.
----------------------------------------------------------------------
Ran 1 test in 0.294s

OK
<-- zsp::arl::eval::EvalContextIncrElab::[0] eval (0)
